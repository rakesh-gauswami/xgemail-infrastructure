{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Template containing a collection of Xgemail SSM Elasticsearch Documents",

  "Metadata": {
    "Copyright": [
      "Copyright 2021, Sophos Limited. All rights reserved.",
      "",
      "'Sophos' and 'Sophos Anti-Virus' are registered trademarks of",
      "Sophos Limited and Sophos Group.  All other product and company",
      "names mentioned are trademarks or registered trademarks of their",
      "respective owners."
    ],

    "Comments": [
      "Creates SSM Elasticsearch Documents to automate control of various functions on CloudStation infrastructure."
    ]
  },

  "Parameters": {
    "Environment": {
      "Description": "(inf, dev, qa, prod)",
      "Type": "String"
    }
  },

  "Resources": {
    "ElasticsearchRestart": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "DocumentType": "Automation",
        "Content": {
          "schemaVersion": "0.3",
          "assumeRole": { "Fn::GetAtt": [ "ElasticsearchAutomationRole", "Arn" ] },
          "description": "Elasticsearch restart in all data nodes instances.",
          "mainSteps": [
            {
              "name": "getInstanceIds",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "elasticsearch-data"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations..Instances..InstanceId",
                  "Type": "StringList"
                }
              ],
              "isCritical": "true",
              "nextStep": "Elasticsearchconfig"
            },
            {
              "name": "Elasticsearchconfig",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{getInstanceIds.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "echo eu_west_1_client=$(cloud list eu-west-1 | awk \"/elasticsearch-client:/\" | awk '{print $3}' | head -n 1)",
                    "eu_west_1_status=$(cloud ssh -tq ${eu_west_1_client} \"curl -XGET 'http://localhost:9200/_cluster/health?pretty=true'\" | grep \"status\" | cut -d: -f2 | sed 's/\"//g' | sed 's/,//g')",
                    "echo -e \"${Green}${eu_west_1_status}${NC}\"'",
                    "eu_west_1_data=$(cloud list eu-west-1 | awk \"/elasticsearch-data:/\" | awk '{print $3}')\n  for instance in ${eu_west_1_data};do\n    echo -e \"${Green}elasticsearch service will be restarted in ${instance}${NC}\"\n    cloud ssh -tq ${instance} \"sudo service elasticsearch status;sudo service elasticsearch stop;sleep 10;sudo service elasticsearch start;sleep 10;sudo service elasticsearch status\"\n    check_cluster_status\n    while [ ${eu_west_1_status} != \"green\" ]; do\n      echo -e \"${Green}current cluster status is ${eu_west_1_status}${NC}\"\n      sleep 2m\n      check_cluster_status\n    done\n  done",
                    "if [ ${eu_west_1_status} != \"green\" ];then\n  echo -e \"${Red}cluster status is not green...${NC}\"",
                    "echo \"Please check as cluster status is not green.\" | mail -s \"Elasticsearch:EU-WEST-1\"debi.sethy@sophos.com",
                    "echo -e \"${Green}cluster status is green...${NC}\"\n  echo \"elasticsearch service restart activity has been started in eu-west-1 region and cluster status is ${eu_west_1_status}\" | mail -s \"Elasticsearch:EU-WEST-1\" Debi.Sethy@Sophos.com,Abhijit.Sharma@Sophos.com",
                    "echo -e \"${Green}Proceeding with restart of data nodes...${NC}\"\n  service_restart\n  echo \"elasticsearch service restart activity has been completed successfully and cluster status is ${eu_west_1_status}\" | mail -s \"Elasticsearch:EU-WEST-1\"Debi.Sethy@Sophos.com,Abhijit.Sharma@Sophos.com\nfi"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "ElasticsearchRestart" ] ] }
          },
          {
            "Key": "Application",
            "Value": "CloudStation"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "PythonCommandElasticsearchRestart": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "DocumentType": "Automation",
        "Content": {
          "schemaVersion": "0.3",
          "assumeRole": { "Fn::GetAtt": [ "ElasticsearchAutomationRole", "Arn" ] },
          "description": "Elasticsearch restart in all data nodes instances.",
          "parameters": {
            "Action": {
              "type": "String",
              "description": "Action to check elasticsearch service status."
            },
            "Environment": {
              "type":"String",
              "description":"The account environment.",
              "allowedValues": [
                "INF",
                "DEV",
                "QA",
                "PROD"
              ],
              "default": "PROD"
            },
            "Region": {
              "type":"String",
              "description":"The AWS Region.",
              "allowedValues": [
                "us-east-2",
                "us-west-2",
                "eu-west-1",
                "eu-central-1"
              ]
            }
          },
          "mainSteps": [
            {

            }
          ]
        }
      }
    },

    "ElasticsearchAutomationRole" : {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "ec2.amazonaws.com",
                "ssm.amazonaws.com"
              ]
            },
            "Action": [ "sts:AssumeRole" ]
          }]
        },
        "Path": "/",
        "Tags": [
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "ElasticsearchAutomationRole" ] ] }
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },
    "ElasticsearchAutomationRolePolicies": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iam:PassRole"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:CreateTags",
                "ec2:DescribeInstances",
                "ec2:DescribeTags"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:logs:*:*:*"
              ]
            },
            {
              "Action": [
                "ssm:DescribeAutomationExecutions",
                "ssm:DescribeAutomationStepExecutions",
                "ssm:DescribeDocument",
                "ssm:DescribeInstanceInformation",
                "ssm:GetAutomationExecution",
                "ssm:GetCommandInvocation",
                "ssm:GetConnectionStatus",
                "ssm:GetDocument",
                "ssm:ListCommandInvocations",
                "ssm:ListCommands",
                "ssm:ListInstanceAssociations",
                "ssm:ListDocuments",
                "ssm:ListDocumentVersions",
                "ssm:SendCommand",
                "ssm:StartAutomationExecution"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ]
        },
        "PolicyName": "root",
        "Roles": [
          {
            "Ref": "ElasticsearchAutomationRole"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    }
  },

  "Outputs" : {
    "ElasticsearchRestart" : {
      "Description" : "SSM Elasticsearch restart in all data nodes instances",
      "Value" : { "Ref" : "ElasticsearchRestart" }
    },
    "ElasticsearchAutomationRole": {
      "Description": "Elasticsearch Automation Role",
      "Value": { "Ref": "ElasticsearchAutomationRole" }
    },
    "ElasticsearchAutomationRoleArn": {
      "Description": "Elasticsearch Automation Role ARN",
      "Value": { "Fn::GetAtt" : [ "ElasticsearchAutomationRole", "Arn" ] }
    }
  }
}
