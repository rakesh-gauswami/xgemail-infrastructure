{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Template containing a collection of Xgemail SSM Documents",

  "Metadata": {
    "Copyright": [
      "Copyright 2020, Sophos Limited. All rights reserved.",
      "",
      "'Sophos' and 'Sophos Anti-Virus' are registered trademarks of",
      "Sophos Limited and Sophos Group.  All other product and company",
      "names mentioned are trademarks or registered trademarks of their",
      "respective owners."
    ],

    "Comments": [
      "Creates SSM Documents to automate control of various functions on CloudEmail infrastructure."
    ]
  },

   "Parameters": {
    "AlarmTopicArn": {
      "Description": "ARN for SNS Topic that should receive alarm notifications",
      "Type": "String"
    },
     "EipRotationLambdaFunction": {
      "Description": "The name of the EIP Rotation Lambda Function",
      "Type": "String"
    }
   },

  "Resources" : {
    "PostfixService": {
      "Type": "AWS::SSM::Document",
      "Properties":{
        "Content": {
          "schemaVersion": "1.2",
          "description": "Start or Stop Postfix Service via Monit Service",
          "parameters": {
             "cmd":{
              "type":"String",
              "description":"Start or stop Postfix."
            }
          },
          "runtimeConfig": {
            "aws:runShellScript": {
              "properties": [
                {
                  "id": "0.aws:runShellScript",
                  "runCommand": ["monit {{ cmd }} postfix"]
                }
              ]
            }
          }
        },
        "DocumentType": "Command",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "PostfixService" ] ] }
          },
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "UpdateHostname": {
      "Type": "AWS::SSM::Document",
      "Properties":{
        "Content": {
          "schemaVersion": "1.2",
          "description": "Update the hostname on an EC2 instance",
          "parameters": {
            "hostname":{
              "type":"String",
              "description":"The hostname of the ec2 instance."
            }
          },
          "runtimeConfig": {
            "aws:runShellScript": {
              "properties": [
                {
                  "id": "0.aws:runShellScript",
                  "runCommand": [
                    "postmulti -i $(postmulti -l | grep -v '^-' | awk '{print $1}') -x postconf myhostname={{ hostname }}",
                    "monit start postfix"
                  ]
                }
              ]
            }
          }
        },
        "DocumentType": "Command",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "UpdateHostname" ] ] }
          },
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "PostconfCommand": {
      "Type": "AWS::SSM::Document",
      "Properties":{
        "DocumentType": "Command",
        "Content": {
          "schemaVersion": "2.2",
          "description": "Run any Postmulti/Postconf command on any instance",
          "parameters": {
            "Parameter":{
              "type":"String",
              "description":"The Postfix configuration Parameter."
            },
            "Value":{
              "type":"String",
              "description":"The Postfix configuration Parameter Value."
            }
          },
          "mainSteps":[
            {
              "action":"aws:runShellScript",
              "name":"runShellScript",
              "inputs":{
                "runCommand":[
                  "postmulti -i $(postmulti -l | grep -v '^-' | awk '{print $1}') -x postconf -e {{ Parameter }}='{{ Value }}'"
                ]
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "PostconfCommand" ] ] }
          },
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "BulkSenderAutomation": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "DocumentType": "Automation",
        "Content": {
          "schemaVersion": "0.3",
          "assumeRole": { "Fn::GetAtt" : [ "BulkSenderAutomationRole", "Arn" ] },
          "description": "Execute BulkSender PythonScript",
          "parameters": {
            "assumeRole": {
              "type": "String",
              "description": "Role under which to run the automation",
              "default": ""
            },
            "InstanceType": {
              "type": "String",
              "description": "The EC2 Instance Type.",
              "allowedValues": [
                "customer-submit"
              ]
            }
          },
          "mainSteps":[
            {
              "name": "getInstance",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "{{InstanceType}}"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceId",
                  "Selector": "$.Reservations[0].Instances[0].InstanceId",
                  "Type": "String"
                }
              ],
              "isCritical": "true",
              "nextStep": "RunRateLimitScript"
            },
            {
              "name": "RunRateLimitScript",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 30,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{getInstance.InstanceId}}" ],
                "Parameters": {
                  "commands": [
                    "/opt/sophos/xgemail/xgemail-bulksender-service/xgemail.bulksender.merger.py"
                  ]
                }
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "BulkSenderAutomation" ] ] }
          },
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "PostfixSxlUpdate": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "DocumentType": "Automation",
        "Content": {
          "schemaVersion": "0.3",
          "assumeRole": { "Fn::GetAtt" : [ "PostfixAutomationRole", "Arn" ] },
          "description": "Update Postfix configuration on an EC2 instance in an AutoScaling Group",
          "parameters": {
            "InstanceType": {
              "type": "String",
              "description": "The EC2 Instance Type.",
              "allowedValues": [
                "internet-submit",
                "customer-submit"
              ]
            },
            "SxlRevision": {
              "type": "String",
              "description": "SXL Revision to apply",
              "default": "b",
              "allowedValues": [
                "a",
                "b"
              ]
            }
          },
          "mainSteps":[
            {
              "name": "chooseAutomation",
              "action": "aws:branch",
              "isEnd": "true",
              "inputs": {
                "Choices": [
                  {
                    "Variable": "{{SxlRevision}}",
                    "StringEquals": "b",
                    "NextStep": "updateSxlRevision"
                  },
                  {
                    "Variable": "{{SxlRevision}}",
                    "StringEquals": "a",
                    "NextStep": "rollbackSxlRevision"
                  }
                ]
              }
            },
            {
              "name": "updateSxlRevision",
              "action": "aws:executeAutomation",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "isEnd": "true",
              "onFailure": "Abort",
              "inputs": {
                "DocumentName": { "Ref" : "UpdateInstance" },
                "RuntimeParameters": {
                  "InstanceType": "{{InstanceType}}",
                  "SxlCurrent": "a",
                  "SxlUpdate": "b"
                }
              }
            },
            {
              "name": "rollbackSxlRevision",
              "action": "aws:executeAutomation",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "isEnd": "true",
              "onFailure": "Abort",
              "inputs": {
                "DocumentName": { "Ref" : "UpdateInstance" },
                "RuntimeParameters": {
                  "InstanceType": "{{InstanceType}}",
                  "SxlCurrent": "b",
                  "SxlUpdate": "a"
                }
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "PostfixSxlUpdate" ] ] }
          },
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "UpdateInstance": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "DocumentType": "Automation",
        "Content": {
          "schemaVersion": "0.3",
          "assumeRole": "{{assumeRole}}",
          "description": "Update Postfix configuration on an EC2 instance in an AutoScaling Group",
          "parameters": {
            "assumeRole": {
              "type": "String",
              "description": "Role under which to run the automation",
              "default": ""
            },
            "InstanceType": {
              "type": "String",
              "description": "The EC2 Instance Type.",
              "allowedValues": [
                "internet-submit",
                "customer-submit"
              ]
            },
            "SxlCurrent": {
              "type": "String",
              "description": "The Postfix parameter to update."
            },
            "SxlUpdate": {
              "type": "String",
              "description": "The Postfix parameter value."
            }
          },
          "mainSteps":[
            {
              "name": "getInstance",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "{{InstanceType}}"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  },
                  {
                    "Name": "tag:sxl-revision",
                    "Values": [
                      "{{SxlCurrent}}"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceId",
                  "Selector": "$.Reservations[0].Instances[0].InstanceId",
                  "Type": "String"
                }
              ],
              "isCritical": "true",
              "nextStep": "PostfixConfig"
            },
            {
              "name": "PostfixConfig",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{getInstance.InstanceId}}" ],
                "Parameters": {
                  "commands": [
                    "postmulti -i $(postmulti -l | grep -v '^-' | awk '{print $1}') -x postconf reject_rbl_client='$reject_rbl_client_{{SxlUpdate}}'",
                    "postmulti -i $(postmulti -l | grep -v '^-' | awk '{print $1}') -x postconf rbl_reply_maps=hash:/etc/$(postmulti -l | grep -v '^-' | awk '{print $1}')/rbl_reply_maps_{{SxlUpdate}}",
                    "postmulti -i $(postmulti -l | grep -v '^-' | awk '{print $1}') -p reload"
                  ]
                }
              },
              "nextStep": "tagInstance"
            },
            {
              "name": "tagInstance",
              "action": "aws:executeAutomation",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "isEnd": "true",
              "onFailure": "Abort",
              "inputs": {
                "DocumentName": { "Ref" : "TagInstance" },
                "RuntimeParameters": {
                  "InstanceId": "{{getInstance.InstanceId}}",
                  "Tag": "sxl-revision",
                  "Value": "{{SxlUpdate}}"
                }
              }
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "UpdateInstance" ] ] }
          },
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "TagInstance": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "DocumentType": "Automation",
        "Content": {
          "schemaVersion": "0.3",
          "assumeRole": "{{assumeRole}}",
          "description": "Update Postfix configuration on an EC2 instance in an AutoScaling Group",
          "parameters": {
            "assumeRole": {
              "type": "String",
              "description": "Role under which to run the automation",
              "default": ""
            },
            "InstanceId": {
              "type": "String",
              "description": "(Required) The instance-id for the instance.",
              "allowedPattern": "^i-[a-z0-9]{8,17}$"
            },
            "Tag": {
              "type": "String",
              "description": "The Tag."
            },
            "Value": {
              "type": "String",
              "description": "The Tag value."
            }
          },
          "mainSteps":[
            {
              "name": "tagInstance",
              "action": "aws:createTags",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "ResourceType":"EC2",
                "ResourceIds":[
                  "{{InstanceId}}"
                ],
                "Tags": [
                  {
                    "Key": "{{Tag}}",
                    "Value": "{{Value}}"
                  }
                ]
              },
              "isCritical": "true",
              "isEnd": "true"
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "TagInstance" ] ] }
          },
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "PostfixCommandBlockSender": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "DocumentType": "Automation",
        "Content": {
          "schemaVersion": "0.3",
          "assumeRole": { "Fn::GetAtt" : [ "PostfixAutomationRole", "Arn" ] },
          "description": "Blocked Sender address in all internet-submit Postfix instances.",
          "parameters": {
            "SenderAddress": {
              "type": "String",
              "description": "The sender address to block in Postfix config."
            }
          },
          "mainSteps":[
            {
              "name": "getInstance",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "internet-submit"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations.Instances.InstanceId",
                  "Type": "StringMap"
                }
              ],
              "isCritical": "true",
              "nextStep": "PostfixConfig"
            },
            {
              "name": "PostfixConfig",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{getInstance.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "echo {{SenderAddress}} REJECT >> /etc/postfix-is/sender_access",
                    "postmap /etc/postfix-is/sender_access",
                    "postmulti -i postfix-is -x postconf smtpd_sender_restrictions='reject_non_fqdn_sender, check_sender_access hash:/etc/postfix-is/sender_access'",
                    "postmulti -i postfix-is -p reload"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "PostfixCommandBlockSender" ] ] }
          },
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "EipRotation": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "DocumentType": "Automation",
        "Content": {
          "schemaVersion": "0.3",
          "assumeRole": { "Fn::GetAtt" : [ "EipRotationAutomationRole", "Arn" ] },
          "description": "Rotate EIP on an EC2 instance in an AutoScaling Group",
          "parameters": {
            "InstanceId": {
              "type": "String",
              "description": "(Required) The instance-id for the instance.",
              "allowedPattern": "^i-[a-z0-9]{8,17}$"
            },
            "Eip": {
              "type": "String",
              "description": "(Optional) The Eip to attach to the instance.",
              "default": ""
            }
          },
          "mainSteps":[
            {
              "name": "eipRotation",
              "action": "aws:invokeLambdaFunction",
              "timeoutSeconds": 300,
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "InvocationType": "RequestResponse",
                "LogType": "Tail",
                "FunctionName":{ "Ref": "EipRotationLambdaFunction" },
                "Payload":"{\"EC2InstanceId\":\"{{InstanceId}}\", \"Eip\":\"{{Eip}}\"}"
              }
            }
          ],
          "outputs": [
            "eipRotation.StatusCode",
            "eipRotation.FunctionError",
            "eipRotation.LogResult"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "EipRotation" ] ] }
          },
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "TerminateAutoScalingInstance": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "DocumentType": "Automation",
        "Content": {
          "schemaVersion": "0.3",
          "assumeRole": { "Fn::GetAtt" : [ "TerminationAutomationRole", "Arn" ] },
          "description": "Terminate an EC2 instance in an AutoScaling Group",
          "parameters": {
            "InstanceId": {
              "type": "String",
              "description": "The EC2 Instance Id."
            },
            "ShouldDecrementDesiredCapacity": {
              "type": "Boolean",
              "default": false,
              "allowedValues": [
                true,
                false
              ],
              "description": "Indicates whether terminating the instance also decrements the size of the Auto Scaling group."
            }
          },
          "mainSteps":[
            {
              "name": "terminateInstanceInAutoScalingGroup",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "timeoutSeconds": 60,
              "inputs": {
                "Service": "autoscaling",
                "Api": "TerminateInstanceInAutoScalingGroup",
                "InstanceId": "{{InstanceId}}",
                "ShouldDecrementDesiredCapacity": "{{ShouldDecrementDesiredCapacity}}"
              },
              "outputs": [
                {
                  "Name": "StatusMessage",
                  "Selector": "$.Activity.StatusMessage",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "TerminateAutoScalingInstance" ] ] }
          },
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "InstanceTerminator": {
      "Type": "AWS::SSM::Document",
      "Properties":{
        "Content": {
          "schemaVersion": "2.2",
          "description": "Safe shutdown of an EC2 instance",
          "parameters": {
            "Region":{
              "type":"String",
              "description":"The AWS Region."
            },
            "Time":{
              "type":"String",
              "description":"The timestamp on the Lifecycle Hook."
            },
            "AutoScalingGroupName":{
              "type":"String",
              "description":"The AutoScaling Group Name."
            },
            "InstanceId":{
              "type":"String",
              "description":"The EC2 Instance Id."
            },
            "LifecycleHookName":{
              "type":"String",
              "description":"The Lifecycle Hook Name."
            },
            "LifecycleActionToken":{
              "type":"String",
              "description":"The Lifecycle Action Token."
            }
          },
          "mainSteps":[
            {
              "action":"aws:runShellScript",
              "name":"runShellScript",
              "inputs":{
                "runCommand":[
                  "/opt/sophos/xgemail/instance-terminator.py -r {{ Region }} -t {{ Time }} -a {{ AutoScalingGroupName }} -i {{ InstanceId }} -l {{ LifecycleHookName }} -k {{ LifecycleActionToken }}"
                ]
              }
            }
          ]
        },
        "DocumentType": "Command",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "InstanceTerminator" ] ] }
          },
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "TerminationAutomation": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "DocumentType": "Automation",
        "Content": {
          "schemaVersion": "0.3",
          "assumeRole": { "Fn::GetAtt" : [ "TerminationAutomationRole", "Arn" ] },
          "description": "Safe shutdown of an EC2 instance",
          "parameters": {
            "Region": {
              "type":"String",
              "description":"The AWS Region."
            },
            "Time": {
              "type":"String",
              "description":"The timestamp on the Lifecycle Hook."
            },
            "AutoScalingGroupName": {
              "type":"String",
              "description":"The AutoScaling Group Name."
            },
            "InstanceId": {
              "type":"String",
              "description":"The EC2 Instance Id."
            },
            "LifecycleHookName": {
              "type":"String",
              "description":"The Lifecycle Hook Name."
            },
            "LifecycleActionToken": {
              "type":"String",
              "description":"The Lifecycle Action Token."
            }
          },
          "mainSteps": [
            {
              "name": "getInstanceDeleteOnTermination",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "timeoutSeconds": 60,
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "InstanceIds": [
                  "{{ InstanceId }}"
                ]
              },
              "outputs": [
                {
                  "Name": "DeleteOnTermination",
                  "Selector": "$.Reservations[0].Instances[0].BlockDeviceMappings[4].Ebs.DeleteOnTermination",
                  "Type": "Boolean"
                }
              ],
              "nextStep": "branchOnDeleteOnTermination",
              "onFailure": "Continue"
            },
            {
              "name": "branchOnDeleteOnTermination",
              "action": "aws:branch",
              "inputs": {
                "Choices": [
                  {
                    "NextStep": "getVolumeId",
                    "Variable": "{{ getInstanceDeleteOnTermination.DeleteOnTermination }}",
                    "BooleanEquals": false
                  }
                ]
              },
              "isEnd": true
            },
            {
              "name": "getVolumeId",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "timeoutSeconds": 60,
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeVolumes",
                "Filters": [
                  {
                    "Name": "attachment.instance-id",
                    "Values": [ "{{InstanceId}}" ]
                  },
                  {
                    "Name": "attachment.device",
                    "Values": [ "/dev/xvdi" ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "VolumeId",
                  "Selector": "$.Volumes[0].Attachments[0].VolumeId",
                  "Type": "String"
                }
              ],
              "nextStep": "terminationAutomation",
              "onFailure": "Continue"
            },
            {
              "name": "terminationAutomation",
              "action": "aws:runCommand",
              "maxAttempts": 1,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{InstanceId}}" ],
                "Parameters": {
                  "commands": [
                    "/opt/sophos/xgemail/instance-terminator.py -r {{Region}} -t {{Time}} -a {{AutoScalingGroupName}} -i {{InstanceId}} -l {{LifecycleHookName}} -k {{LifecycleActionToken}}"
                  ]
                }
              },
              "nextStep": "volumeEmpty",
              "onFailure": "step:volumeNotEmpty"
            },
            {
              "name": "volumeNotEmpty",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "timeoutSeconds": 60,
              "inputs": {
                "Service": "autoscaling",
                "Api": "CompleteLifecycleAction",
                "AutoScalingGroupName": "{{AutoScalingGroupName}}",
                "InstanceId": "{{InstanceId}}",
                "LifecycleActionResult": "CONTINUE",
                "LifecycleActionToken": "{{LifecycleActionToken}}",
                "LifecycleHookName": "{{LifecycleHookName}}"
              },
              "nextStep": "sendAlert",
              "onFailure": "Continue"
            },
            {
              "name": "sendAlert",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "timeoutSeconds": 60,
              "inputs": {
                "Service": "sns",
                "Api": "Publish",
                "TopicArn": { "Ref": "AlarmTopicArn" },
                "Subject": "Undelivered messages stuck in email queue on Volume Id {{getVolumeId.VolumeId}}",
                "Message": "Region: {{Region}} Volume Id: {{getVolumeId.VolumeId}} EC2 Instance: {{InstanceId}}"
              },
              "isEnd": true
            },
            {
              "name": "volumeEmpty",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "timeoutSeconds": 60,
              "inputs": {
                "Service": "autoscaling",
                "Api": "CompleteLifecycleAction",
                "AutoScalingGroupName": "{{AutoScalingGroupName}}",
                "InstanceId": "{{InstanceId}}",
                "LifecycleActionResult": "CONTINUE",
                "LifecycleActionToken": "{{LifecycleActionToken}}",
                "LifecycleHookName": "{{LifecycleHookName}}"
              },
              "nextStep": "describeVolume"
            },
            {
              "name": "describeVolume",
              "action": "aws:waitForAwsResourceProperty",
              "timeoutSeconds": 120,
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeVolumes",
                "VolumeIds": [ "{{getVolumeId.VolumeId}}" ],
                "PropertySelector": "$.Volumes[0].State",
                "DesiredValues": [ "available" ]
              },
              "nextStep": "deleteVolume",
              "onFailure": "Continue"
            },
            {
              "name": "deleteVolume",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "timeoutSeconds": 60,
              "inputs": {
                "Service": "ec2",
                "Api": "DeleteVolume",
                "VolumeId": "{{getVolumeId.VolumeId}}"
              },
              "isEnd": true
            }
          ],
          "outputs": [
            "getVolumeId.VolumeId",
            "getInstanceDeleteOnTermination.DeleteOnTermination"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "TerminationAutomation" ] ] }
          },
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "TerminationAutomationRole" : {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "ec2.amazonaws.com",
                "ssm.amazonaws.com"
              ]
            },
            "Action": [ "sts:AssumeRole" ]
          }]
        },
        "Path": "/",
        "Tags": [
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "TerminationAutomationRole" ] ] }
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },
    "TerminationAutomationRolePolicies": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iam:PassRole"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "autoscaling:CompleteLifecycleAction",
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:RecordLifecycleActionHeartbeat",
                "autoscaling:TerminateInstanceInAutoScalingGroup",
                "autoscaling:UpdateAutoScalingGroup"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:CreateTags",
                "ec2:DescribeInstances",
                "ec2:DeleteVolume",
                "ec2:DescribeVolumes",
                "ec2:DetachVolume",
                "ec2:DeleteVolume"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:logs:*:*:*"
              ]
            },
            {
              "Action": [
                "sns:GetSubscriptionAttributes",
                "sns:ListSubscriptionsByTopic",
                "sns:ListTopics",
                "sns:Publish",
                "sns:Unsubscribe"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:sns",
                      { "Ref": "AWS::Region" },
                      { "Ref": "AWS::AccountId" },
                      "*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "sqs:DeleteQueue",
                "sqs:GetQueueUrl",
                "sqs:ListQueues"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ssm:DescribeAutomationExecutions",
                "ssm:DescribeAutomationStepExecutions",
                "ssm:DescribeDocument",
                "ssm:DescribeInstanceInformation",
                "ssm:GetAutomationExecution",
                "ssm:GetCommandInvocation",
                "ssm:GetConnectionStatus",
                "ssm:GetDocument",
                "ssm:ListCommandInvocations",
                "ssm:ListCommands",
                "ssm:ListInstanceAssociations",
                "ssm:ListDocuments",
                "ssm:ListDocumentVersions",
                "ssm:SendCommand",
                "ssm:StartAutomationExecution"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ]
        },
        "PolicyName": "root",
        "Roles": [
          {
            "Ref": "TerminationAutomationRole"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },

    "PostfixAutomationRole" : {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "ec2.amazonaws.com",
                "ssm.amazonaws.com"
              ]
            },
            "Action": [ "sts:AssumeRole" ]
          }]
        },
        "Path": "/",
        "Tags": [
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "PostfixAutomationRole" ] ] }
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },
    "PostfixAutomationRolePolicies": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iam:PassRole"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:CreateTags",
                "ec2:DescribeInstances",
                "ec2:DescribeTags"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:logs:*:*:*"
              ]
            },
            {
              "Action": [
                "ssm:DescribeAutomationExecutions",
                "ssm:DescribeAutomationStepExecutions",
                "ssm:DescribeDocument",
                "ssm:DescribeInstanceInformation",
                "ssm:GetAutomationExecution",
                "ssm:GetCommandInvocation",
                "ssm:GetConnectionStatus",
                "ssm:GetDocument",
                "ssm:ListCommandInvocations",
                "ssm:ListCommands",
                "ssm:ListInstanceAssociations",
                "ssm:ListDocuments",
                "ssm:ListDocumentVersions",
                "ssm:SendCommand",
                "ssm:StartAutomationExecution"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ]
        },
        "PolicyName": "root",
        "Roles": [
          {
            "Ref": "PostfixAutomationRole"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },

    "EipRotationAutomationRole" : {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "ssm.amazonaws.com"
              ]
            },
            "Action": [ "sts:AssumeRole" ]
          }]
        },
        "Path": "/",
        "Tags": [
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "EipRotationAutomationRole" ] ] }
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },
    "EipRotationAutomationRolePolicies": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iam:PassRole"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:logs:*:*:*"
              ]
            },
            {
              "Action": [
                "lambda:InvokeFunction"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:lambda",
                      { "Ref": "AWS::Region" },
                      { "Ref": "AWS::AccountId" },
                      "function",
                      { "Ref": "EipRotationLambdaFunction" }
                    ]
                  ]
                }
              ]
            }
          ]
        },
        "PolicyName": "root",
        "Roles": [
          {
            "Ref": "EipRotationAutomationRole"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    },

    "BulkSenderAutomationRole" : {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "ec2.amazonaws.com",
                "ssm.amazonaws.com"
              ]
            },
            "Action": [ "sts:AssumeRole" ]
          }]
        },
        "Path": "/",
        "Tags": [
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "BulkSenderAutomationRole" ] ] }
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },
    "BulkSenderAutomationRolePolicies": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iam:PassRole"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeTags"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:logs:*:*:*"
              ]
            },
            {
              "Action": [
                "ssm:DescribeAutomationExecutions",
                "ssm:DescribeAutomationStepExecutions",
                "ssm:DescribeDocument",
                "ssm:DescribeInstanceInformation",
                "ssm:GetAutomationExecution",
                "ssm:GetCommandInvocation",
                "ssm:GetConnectionStatus",
                "ssm:GetDocument",
                "ssm:ListCommandInvocations",
                "ssm:ListCommands",
                "ssm:ListInstanceAssociations",
                "ssm:ListDocuments",
                "ssm:ListDocumentVersions",
                "ssm:SendCommand",
                "ssm:StartAutomationExecution"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ]
        },
        "PolicyName": "root",
        "Roles": [
          {
            "Ref": "BulkSenderAutomationRole"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    }
  },

  "Outputs" : {
    "BulkSenderAutomation" : {
      "Description" : "SSM Rate Limit Automation Document name",
      "Value" : { "Ref" : "BulkSenderAutomation" }
    },
    "BulkSenderAutomationRole": {
      "Description": "Postfix Automation role",
      "Value": { "Ref": "BulkSenderAutomationRole" }
    },
    "BulkSenderAutomationRoleArn": {
      "Description": "Postfix Automation role ARN",
      "Value": { "Fn::GetAtt" : [ "BulkSenderAutomationRole", "Arn" ] }
    },
    "EipRotation" : {
      "Description" : "SSM EipRotation document name",
      "Value" : { "Ref" : "EipRotation" }
    },
    "EipRotationAutomationRole": {
      "Description": "EipRotation Automation role",
      "Value": { "Ref": "EipRotationAutomationRole" }
    },
    "EipRotationAutomationRoleArn": {
      "Description": "EipRotation Automation role ARN",
      "Value": { "Fn::GetAtt" : [ "EipRotationAutomationRole", "Arn" ] }
    },
    "InstanceTerminator" : {
      "Description" : "SSM Instance Terminator document name",
      "Value" : { "Ref" : "InstanceTerminator" }
    },
    "PostconfCommand" : {
      "Description" : "SSM Postfix Command document name",
      "Value" : { "Ref" : "PostconfCommand" }
    },
    "PostfixAutomationRole": {
      "Description": "Postfix Automation role",
      "Value": { "Ref": "PostfixAutomationRole" }
    },
    "PostfixAutomationRoleArn": {
      "Description": "Postfix Automation role ARN",
      "Value": { "Fn::GetAtt" : [ "PostfixAutomationRole", "Arn" ] }
    },
    "PostfixService" : {
      "Description" : "SSM Postfix Service control document name",
      "Value" : { "Ref" : "PostfixService" }
    },
    "PostfixSxlUpdate" : {
      "Description" : "SSM Postfix Sxl Update document name",
      "Value" : { "Ref" : "PostfixSxlUpdate" }
    },
    "TagInstance" : {
      "Description" : "SSM Tag Instance document name",
      "Value" : { "Ref" : "TagInstance" }
    },
    "TerminationAutomation" : {
      "Description" : "SSM Instance Terminator Automation Document name",
      "Value" : { "Ref" : "TerminationAutomation" }
    },
    "TerminationAutomationRole": {
      "Description": "AutomationTermination role",
      "Value": { "Ref": "TerminationAutomationRole" }
    },
    "TerminationAutomationRoleArn": {
      "Description": "Instance Terminator Automation role ARN",
      "Value": { "Fn::GetAtt" : [ "TerminationAutomationRole", "Arn" ] }
    },
    "UpdateHostname" : {
      "Description" : "SSM Update Hostname document name",
      "Value" : { "Ref" : "UpdateHostname" }
    },
    "UpdateInstance" : {
      "Description" : "SSM Update Instance document name",
      "Value" : { "Ref" : "UpdateInstance" }
    }
  }
}
