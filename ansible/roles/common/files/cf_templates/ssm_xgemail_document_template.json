{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Template containing a collection of Xgemail SSM Documents",

  "Metadata": {
    "Copyright": [
      "Copyright 2018, Sophos Limited. All rights reserved.",
      "",
      "'Sophos' and 'Sophos Anti-Virus' are registered trademarks of",
      "Sophos Limited and Sophos Group.  All other product and company",
      "names mentioned are trademarks or registered trademarks of their",
      "respective owners."
    ],

    "Comments": [
      "Creates SSM Documents to automate control of various functions on CloudEmail infrastructure."
    ]
  },

  "Resources" : {
    "PostfixService": {
      "Type": "AWS::SSM::Document",
      "Properties":{
        "Content": {
          "schemaVersion": "1.2",
          "description": "Start or Stop Postfix Service via Monit Service",
          "parameters": {
             "cmd":{
              "type":"String",
              "description":"Start or stop Postfix."
            }
          },
          "runtimeConfig": {
            "aws:runShellScript": {
              "properties": [
                {
                  "id": "0.aws:runShellScript",
                  "runCommand": ["monit {{ cmd }} postfix"]
                }
              ]
            }
          }
        },
        "DocumentType": "Command"
      }
    },

    "UpdateHostname": {
      "Type": "AWS::SSM::Document",
      "Properties":{
        "Content": {
          "schemaVersion": "1.2",
          "description": "Update the hostname on an EC2 instance",
          "parameters": {
            "hostname":{
              "type":"String",
              "description":"The hostname of the ec2 instance."
            }
          },
          "runtimeConfig": {
            "aws:runShellScript": {
              "properties": [
                {
                  "id": "0.aws:runShellScript",
                  "runCommand": [
                    "postmulti -i $(postmulti -l | grep -v '^-' | awk '{print $1}') -x postconf myhostname={{ hostname }}",
                    "monit start postfix"
                  ]
                }
              ]
            }
          }
        },
        "DocumentType": "Command"
      }
    },

    "InstanceTerminator": {
      "Type": "AWS::SSM::Document",
      "Properties":{
        "Content": {
          "schemaVersion": "2.2",
          "description": "Safe shutdown of an EC2 instance",
          "parameters": {
            "Region":{
              "type":"String",
              "description":"The AWS Region."
            },
            "Time":{
              "type":"String",
              "description":"The timestamp on the Lifecycle Hook."
            },
            "AutoScalingGroupName":{
              "type":"String",
              "description":"The AutoScaling Group Name."
            },
            "InstanceId":{
              "type":"String",
              "description":"The EC2 Instance Id."
            },
            "LifecycleHookName":{
              "type":"String",
              "description":"The Lifecycle Hook Name."
            },
            "LifecycleActionToken":{
              "type":"String",
              "description":"The Lifecycle Action Token."
            }
          },
          "mainSteps":[
            {
              "action":"aws:runShellScript",
              "name":"runShellScript",
              "inputs":{
                "runCommand":[
                  "/opt/sophos/xgemail/instance-terminator.py -r {{ Region }} -t {{ Time }} -a {{ AutoScalingGroupName }} -i {{ InstanceId }} -l {{ LifecycleHookName }} -k {{ LifecycleActionToken }}"
                ]
              }
            }
          ]
        },
        "DocumentType": "Command"
      }
    },

    "TerminationAutomation": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "DocumentType": "Automation",
        "Content": {
          "schemaVersion": "0.3",
          "assumeRole": { "Fn::GetAtt" : [ "TerminationAutomationRole", "Arn" ] },
          "description": "Safe shutdown of an EC2 instance",
          "parameters": {
            "Region": {
              "type":"String",
              "description":"The AWS Region."
            },
            "Time": {
              "type":"String",
              "description":"The timestamp on the Lifecycle Hook."
            },
            "AutoScalingGroupName": {
              "type":"String",
              "description":"The AutoScaling Group Name."
            },
            "InstanceId": {
              "type":"String",
              "description":"The EC2 Instance Id."
            },
            "LifecycleHookName": {
              "type":"String",
              "description":"The Lifecycle Hook Name."
            },
            "LifecycleActionToken": {
              "type":"String",
              "description":"The Lifecycle Action Token."
            }
          },
          "mainSteps":[
            {
              "name":"terminationAutomation",
              "action":"aws:runCommand",
              "maxAttempts": "1",
              "timeoutSeconds": "900",
              "onFailure": "Continue",
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": ["{{InstanceId}}"],
                "Parameters": {
                  "commands": [
                    "/opt/sophos/xgemail/instance-terminator.py -r {{ Region }} -t {{ Time }} -a {{ AutoScalingGroupName }} -i {{ InstanceId }} -l {{ LifecycleHookName }} -k {{ LifecycleActionToken }}"
                  ]
                }
              }
            }
          ]
        }
      }
    },

    "TerminationAutomationRole" : {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "ec2.amazonaws.com",
                "ssm.amazonaws.com"
              ]
            },
            "Action": [ "sts:AssumeRole" ]
          }]
        },
        "Path": "/"
      }
    },
    "TerminationAutomationRolePolicies": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iam:PassRole"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "autoscaling:CompleteLifecycleAction",
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:RecordLifecycleActionHeartbeat",
                "autoscaling:UpdateAutoScalingGroup"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:CreateTags",
                "ec2:DescribeInstances",
                "ec2:DeleteVolume",
                "ec2:DescribeVolumes",
                "ec2:DetachVolume",
                "ec2:DeleteVolume"

              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:logs:*:*:*"
              ]
            },
            {
              "Action": [
                "sns:GetSubscriptionAttributes",
                "sns:ListSubscriptionsByTopic",
                "sns:ListTopics",
                "sns:Publish",
                "sns:Unsubscribe"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    ":",
                    [
                      "arn:aws:sns",
                      { "Ref": "AWS::Region" },
                      { "Ref": "AWS::AccountId" },
                      "*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "sqs:DeleteQueue",
                "sqs:GetQueueUrl",
                "sqs:ListQueues"
              ],
              "Effect": "Allow",
              "Resource": [ "*" ]
            },
            {
              "Action": [
                "ssm:DescribeAutomationExecutions",
                "ssm:DescribeAutomationStepExecutions",
                "ssm:DescribeDocument",
                "ssm:DescribeInstanceInformation",
                "ssm:GetAutomationExecution",
                "ssm:GetCommandInvocation",
                "ssm:GetDocument",
                "ssm:ListCommands",
                "ssm:ListInstanceAssociations",
                "ssm:ListDocuments",
                "ssm:ListDocumentVersions",
                "ssm:SendCommand",
                "ssm:StartAutomationExecution"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ]
        },
        "PolicyName": "root",
        "Roles": [
          {
            "Ref": "TerminationAutomationRole"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    }
  },

  "Outputs" : {
    "PostfixService" : {
      "Description" : "SSM Postfix Service control document name",
      "Value" : { "Ref" : "PostfixService" }
    },
    "UpdateHostname" : {
      "Description" : "SSM Update Hostname document name",
      "Value" : { "Ref" : "UpdateHostname" }
    },
    "InstanceTerminator" : {
      "Description" : "SSM Instance Terminator document name",
      "Value" : { "Ref" : "InstanceTerminator" }
    },
    "TerminationAutomation" : {
      "Description" : "SSM Instance Terminator Automation Document name",
      "Value" : { "Ref" : "TerminationAutomation" }
    },
    "TerminationAutomationRole": {
      "Description": "AutomationTermination role",
      "Value": { "Ref": "TerminationAutomationRole" }
    },
    "TerminationAutomationRoleArn": {
      "Description": "Instance Terminator Automation role ARN",
      "Value": { "Fn::GetAtt" : [ "TerminationAutomationRole", "Arn" ] }
    }
  }
}