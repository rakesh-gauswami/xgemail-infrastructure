{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Template containing a collection of Xgemail SSM Postfix Documents",

  "Metadata": {
    "Copyright": [
      "Copyright 2021, Sophos Limited. All rights reserved.",
      "",
      "'Sophos' and 'Sophos Anti-Virus' are registered trademarks of",
      "Sophos Limited and Sophos Group.  All other product and company",
      "names mentioned are trademarks or registered trademarks of their",
      "respective owners."
    ],

    "Comments": [
      "Creates SSM Postfix Documents to automate control of various functions on CloudEmail infrastructure."
    ]
  },

  "Parameters": {
    "Environment": {
      "Description": "(inf, dev, qa, prod)",
      "Type": "String"
    }
  },

  "Resources": {
    "PostfixCommandBlockSender": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "DocumentType": "Automation",
        "Content": {
          "schemaVersion": "0.3",
          "assumeRole": { "Fn::GetAtt": [ "PostfixAutomationRole", "Arn" ] },
          "description": "Blocked Sender address in all internet-submit Postfix instances.",
          "parameters": {
            "SenderAddress": {
              "type": "String",
              "description": "The sender address to block in Postfix config."
            }
          },
          "mainSteps": [
            {
              "name": "getInstanceIds",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "internet-submit"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations..Instances..InstanceId",
                  "Type": "StringList"
                }
              ],
              "isCritical": "true",
              "nextStep": "PostfixConfig"
            },
            {
              "name": "PostfixConfig",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{getInstanceIds.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "echo {{SenderAddress}} REJECT >> /etc/postfix-is/sender_access",
                    "postmap /etc/postfix-is/sender_access",
                    "postmulti -i postfix-is -x postconf smtpd_sender_restrictions='reject_non_fqdn_sender, check_sender_access hash:/etc/postfix-is/sender_access'",
                    "postmulti -i postfix-is -p reload"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "PostfixCommandBlockSender" ] ] }
          },
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "PostfixCommandUnBlockSender": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "DocumentType": "Automation",
        "Content": {
          "schemaVersion": "0.3",
          "assumeRole": { "Fn::GetAtt": [ "PostfixAutomationRole", "Arn" ] },
          "description": "Unblock Sender address in all internet-submit Postfix instances.",
          "parameters": {
            "SenderAddress": {
              "type": "String",
              "description": "The sender address to unblock in Postfix config."
            }
          },
          "mainSteps": [
            {
              "name": "getInstanceIds",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "internet-submit"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations..Instances..InstanceId",
                  "Type": "StringList"
                }
              ],
              "isCritical": "true",
              "nextStep": "PostfixConfig"
            },
            {
              "name": "PostfixConfig",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{getInstanceIds.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "sed -i '/{{SenderAddress}} REJECT/d' /etc/postfix-is/sender_access",
                    "postmap /etc/postfix-is/sender_access",
                    "postmulti -i postfix-is -x postconf smtpd_sender_restrictions='reject_non_fqdn_sender, check_sender_access hash:/etc/postfix-is/sender_access'",
                    "postmulti -i postfix-is -p reload"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "PostfixCommandUnBlockSender" ] ] }
          },
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "PythonCommandBlockUnblockCustomer": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "DocumentType": "Automation",
        "Content": {
          "schemaVersion": "0.3",
          "assumeRole": { "Fn::GetAtt": [ "PostfixAutomationRole", "Arn" ] },
          "description": "Blocked Sender address in all customer-submit Postfix instances.",
          "parameters": {
            "Action": {
              "type": "String",
              "description": "Action to block or unblock an address.",
              "allowedValues": [
                "block",
                "unblock"
              ]
            },
            "Environment": {
              "type":"String",
              "description":"The account environment.",
              "allowedValues": [
                "INF",
                "DEV",
                "QA",
                "PROD"
              ],
              "default": "PROD"
            },
            "Region": {
              "type":"String",
              "description":"The AWS Region.",
              "allowedValues": [
                "us-east-2",
                "us-west-2",
                "eu-west-1",
                "eu-central-1"
              ]
            },
            "SenderAddress": {
              "type": "String",
              "description": "The customer sender address to block in Postfix config."
            }
          },
          "mainSteps": [
            {
              "name": "getInstanceIds",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "customer-submit"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations[0].Instances[0].InstanceId",
                  "Type": "String"
                }
              ],
              "isCritical": "true",
              "nextStep": "PostfixConfig"
            },
            {
              "name": "PostfixConfig",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{getInstanceIds.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "python /opt/sophos/xgemail/utils/blocked_sender_api.py --region {{Region}} --env {{Environment}} --{{Action}} {{SenderAddress}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "PythonCommandBlockUnblockCustomer" ] ] }
          },
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "PythonSenderRecipientBlockUnblock": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "DocumentType": "Automation",
        "Content": {
          "schemaVersion": "0.3",
          "assumeRole": { "Fn::GetAtt": [ "PostfixAutomationRole", "Arn" ] },
          "description": "Blocked Inbound and Outbound Sender and recipient address in all customer-submit and internet-submit Postfix instances.",
          "parameters": {
            "Action": {
              "type": "String",
              "description": "Action to list-email or list-domain block or unblock an address.",
              "allowedValues": [
                "block-email",
                "block-domain",
                "unblock-email",
                "unblock-domain",
                "get-email",
                "get-domain",
                "get-all"
              ]
            },
            "Direction": {
              "type":"String",
              "description":"The Email Directions.",
              "allowedValues": [
                "outbound",
                "inbound"
              ]
            },
            "BlockEventType": {
              "type":"String",
              "description":"The Block Event Type.",
              "allowedValues": [
                "BLOCK_SENDER",
                "BLOCK_ENVELOPE_SENDER",
                "BLOCK_RECIPIENT"
              ]
            },
            "EmailAddressOrDomain": {
              "type": "String",
              "description": "The sender and recipient address or domain to block in Postfix config."
            }
          },
          "mainSteps": [
            {
              "name": "ChooseDirection",
              "action": "aws:branch",
              "inputs": {
                "Choices": [
                  {
                    "NextStep": "FilterOutbound",
                    "Variable": "{{Direction}}",
                    "StringEquals": "outbound"
                  },
                  {
                    "NextStep": "FilterInbound",
                    "Variable": "{{Direction}}",
                    "StringEquals": "inbound"
                  }
                ]
              },
              "isCritical": "true"
            },
            {
              "name": "FilterOutbound",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "customer-submit"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations[0].Instances[0].InstanceId",
                  "Type": "String"
                }
              ],
              "isCritical": "true",
              "nextStep": "ChooseActionOut"
            },
            {
              "name": "ChooseActionOut",
              "action": "aws:branch",
              "inputs": {
                "Choices": [
                  {
                    "NextStep": "PostfixConfigOutBlockEmail",
                    "Variable": "{{Action}}",
                    "StringEquals": "block-email"
                  },
                  {
                    "NextStep": "PostfixConfigOutBlockDomain",
                    "Variable": "{{Action}}",
                    "StringEquals": "block-domain"
                  },
                  {
                    "NextStep": "PostfixConfigOutUnblockEmail",
                    "Variable": "{{Action}}",
                    "StringEquals": "unblock-email"
                  },
                  {
                    "NextStep": "PostfixConfigOutUnblockDomain",
                    "Variable": "{{Action}}",
                    "StringEquals": "unblock-domain"
                  },
                  {
                    "NextStep": "PostfixConfigOutGetEmail",
                    "Variable": "{{Action}}",
                    "StringEquals": "get-email"
                  },
                  {
                    "NextStep": "PostfixConfigOutGetDomain",
                    "Variable": "{{Action}}",
                    "StringEquals": "get-domain"
                  },
                  {
                    "NextStep": "PostfixConfigOutGetAll",
                    "Variable": "{{Action}}",
                    "StringEquals": "get-all"
                  }
                ]
              },
              "isCritical": "true"
            },
            {
              "name": "PostfixConfigOutBlockEmail",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterOutbound.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "python /opt/sophos/xgemail/utils/sender-and-recipient-block.py --direction {{Direction}} --event-type {{BlockEventType}} --block --email-address {{EmailAddressOrDomain}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "PostfixConfigOutBlockDomain",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterOutbound.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "python /opt/sophos/xgemail/utils/sender-and-recipient-block.py --direction {{Direction}} --event-type {{BlockEventType}} --block --domain {{EmailAddressOrDomain}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "PostfixConfigOutUnblockEmail",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterOutbound.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "python /opt/sophos/xgemail/utils/sender-and-recipient-block.py --direction {{Direction}} --event-type {{BlockEventType}} --unblock --email-address {{EmailAddressOrDomain}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "PostfixConfigOutUnblockDomain",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterOutbound.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "python /opt/sophos/xgemail/utils/sender-and-recipient-block.py --direction {{Direction}} --event-type {{BlockEventType}} --unblock --domain {{EmailAddressOrDomain}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "PostfixConfigOutGetEmail",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterOutbound.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "python /opt/sophos/xgemail/utils/sender-and-recipient-block.py --direction {{Direction}} --get-email {{EmailAddressOrDomain}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "PostfixConfigOutGetDomain",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterOutbound.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "python /opt/sophos/xgemail/utils/sender-and-recipient-block.py --direction {{Direction}} --get-domain {{EmailAddressOrDomain}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "PostfixConfigOutGetAll",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterOutbound.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "python /opt/sophos/xgemail/utils/sender-and-recipient-block.py --direction {{Direction}} --get-all"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "FilterInbound",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "internet-submit"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations[0].Instances[0].InstanceId",
                  "Type": "String"
                }
              ],
              "isCritical": "true",
              "nextStep": "ChooseActionIn"
            },
            {
              "name": "ChooseActionIn",
              "action": "aws:branch",
              "inputs": {
                "Choices": [
                  {
                    "NextStep": "PostfixConfigInBlockEmail",
                    "Variable": "{{Action}}",
                    "StringEquals": "block-email"
                  },
                  {
                    "NextStep": "PostfixConfigInBlockDomain",
                    "Variable": "{{Action}}",
                    "StringEquals": "block-domain"
                  },
                  {
                    "NextStep": "PostfixConfigInUnblockEmail",
                    "Variable": "{{Action}}",
                    "StringEquals": "unblock-email"
                  },
                  {
                    "NextStep": "PostfixConfigInUnblockDomain",
                    "Variable": "{{Action}}",
                    "StringEquals": "unblock-domain"
                  },
                  {
                    "NextStep": "PostfixConfigInGetEmail",
                    "Variable": "{{Action}}",
                    "StringEquals": "get-email"
                  },
                  {
                    "NextStep": "PostfixConfigInGetDomain",
                    "Variable": "{{Action}}",
                    "StringEquals": "get-domain"
                  },
                  {
                    "NextStep": "PostfixConfigInGetAll",
                    "Variable": "{{Action}}",
                    "StringEquals": "get-all"
                  }
                ]
              },
              "isCritical": "true"
            },
            {
              "name": "PostfixConfigInBlockEmail",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterInbound.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "python /opt/sophos/xgemail/utils/sender-and-recipient-block.py --direction {{Direction}} --event-type {{BlockEventType}} --block --email-address {{EmailAddressOrDomain}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "PostfixConfigInBlockDomain",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterInbound.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "python /opt/sophos/xgemail/utils/sender-and-recipient-block.py --direction {{Direction}} --event-type {{BlockEventType}} --block --domain {{EmailAddressOrDomain}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "PostfixConfigInUnblockEmail",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterInbound.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "python /opt/sophos/xgemail/utils/sender-and-recipient-block.py --direction {{Direction}} --event-type {{BlockEventType}} --unblock --email-address {{EmailAddressOrDomain}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "PostfixConfigInUnblockDomain",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterInbound.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "python /opt/sophos/xgemail/utils/sender-and-recipient-block.py --direction {{Direction}} --event-type {{BlockEventType}} --unblock --domain {{EmailAddressOrDomain}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "PostfixConfigInGetEmail",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterInbound.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "python /opt/sophos/xgemail/utils/sender-and-recipient-block.py --direction {{Direction}} --get-email {{EmailAddressOrDomain}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "PostfixConfigInGetDomain",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterInbound.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "python /opt/sophos/xgemail/utils/sender-and-recipient-block.py --direction {{Direction}} --get-domain {{EmailAddressOrDomain}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "PostfixConfigInGetAll",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterInbound.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "python /opt/sophos/xgemail/utils/sender-and-recipient-block.py --direction {{Direction}} --get-all"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "PythonSenderRecipientBlockUnblock" ] ] }
          },
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "RunLinuxCommand": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "DocumentType": "Automation",
        "Content": {
          "schemaVersion": "0.3",
          "assumeRole": { "Fn::GetAtt": [ "PostfixAutomationRole", "Arn" ] },
          "description": "Execute Day to da Linux Commands in Postfix Instances",
          "parameters": {
            "InstancesType": {
              "type": "String",
              "description": " Please select the instance where the Commands you need to run",
              "allowedValues": [
                "customer-submit",
                "internet-submit",
                "customer-delivery",
                "customer-xdelivery",
                "internet-delivery",
                "internet-xdelivery",
                "delta-delivery",
                "delta-xdelivery",
                "risky-delivery",
                "risky-xdelivery",
                "warmup-delivery",
                "warmup-xdelivery"
              ]
            },
            "LinuxCommand": {
              "type": "String",
              "description": "The linux command that needs to be run in selected instances."
            }
          },
          "mainSteps": [
            {
              "name": "ChooseInstances",
              "action": "aws:branch",
              "inputs": {
                "Choices": [
                  {
                    "NextStep": "FilterCS",
                    "Variable": "{{InstancesType}}",
                    "StringEquals": "customer-submit"
                  },
                  {
                    "NextStep": "FilterIS",
                    "Variable": "{{InstancesType}}",
                    "StringEquals": "internet-submit"
                  },
                  {
                    "NextStep": "FilterCD",
                    "Variable": "{{InstancesType}}",
                    "StringEquals": "customer-delivery"
                  },
                  {
                    "NextStep": "FilterCX",
                    "Variable": "{{InstancesType}}",
                    "StringEquals": "customer-xdelivery"
                  },
                  {
                    "NextStep": "FilterID",
                    "Variable": "{{InstancesType}}",
                    "StringEquals": "internet-delivery"
                  },
                  {
                    "NextStep": "FilterIX",
                    "Variable": "{{InstancesType}}",
                    "StringEquals": "internet-xdelivery"
                  },
                  {
                    "NextStep": "FilterDD",
                    "Variable": "{{InstancesType}}",
                    "StringEquals": "delta-delivery"
                  },
                  {
                    "NextStep": "FilterDX",
                    "Variable": "{{InstancesType}}",
                    "StringEquals": "delta-xdelivery"
                  },
                  {
                    "NextStep": "FilterRD",
                    "Variable": "{{InstancesType}}",
                    "StringEquals": "risky-delivery"
                  },
                  {
                    "NextStep": "FilterRX",
                    "Variable": "{{InstancesType}}",
                    "StringEquals": "risky-xdelivery"
                  },
                  {
                    "NextStep": "FilterWD",
                    "Variable": "{{InstancesType}}",
                    "StringEquals": "warmup-delivery"
                  },
                  {
                    "NextStep": "FilterWX",
                    "Variable": "{{InstancesType}}",
                    "StringEquals": "warmup-xdelivery"
                  }
                ]
              },
              "isCritical": "true"
            },
            {
              "name": "FilterCS",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "customer-submit"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations[0].Instances[0].InstanceId",
                  "Type": "String"
                }
              ],
              "isCritical": "true",
              "nextStep": "ExecuteLinuxCommandCS"
            },
            {
              "name": "FilterIS",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "internet-submit"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations[0].Instances[0].InstanceId",
                  "Type": "String"
                }
              ],
              "isCritical": "true",
              "nextStep": "ExecuteLinuxCommandIS"
            },
            {
              "name": "FilterCD",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "customer-delivery"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations[0].Instances[0].InstanceId",
                  "Type": "String"
                }
              ],
              "isCritical": "true",
              "nextStep": "ExecuteLinuxCommandCD"
            },
            {
              "name": "FilterCX",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "xdelivery"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations[0].Instances[0].InstanceId",
                  "Type": "String"
                }
              ],
              "isCritical": "true",
              "nextStep": "ExecuteLinuxCommandCX"
            },
            {
              "name": "FilterID",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "internet-delivery"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations[0].Instances[0].InstanceId",
                  "Type": "String"
                }
              ],
              "isCritical": "true",
              "nextStep": "ExecuteLinuxCommandID"
            },
            {
              "name": "FilterIX",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "internet-xdelivery"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations[0].Instances[0].InstanceId",
                  "Type": "String"
                }
              ],
              "isCritical": "true",
              "nextStep": "ExecuteLinuxCommandIX"
            },
            {
              "name": "FilterDD",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "delta-delivery"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations[0].Instances[0].InstanceId",
                  "Type": "String"
                }
              ],
              "isCritical": "true",
              "nextStep": "ExecuteLinuxCommandDD"
            },
            {
              "name": "FilterDX",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "delta-xdelivery"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations[0].Instances[0].InstanceId",
                  "Type": "String"
                }
              ],
              "isCritical": "true",
              "nextStep": "ExecuteLinuxCommandDX"
            },
            {
              "name": "FilterRD",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "risky-delivery"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations[0].Instances[0].InstanceId",
                  "Type": "String"
                }
              ],
              "isCritical": "true",
              "nextStep": "ExecuteLinuxCommandRD"
            },
            {
              "name": "FilterRX",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "Risky-xdelivery"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations[0].Instances[0].InstanceId",
                  "Type": "String"
                }
              ],
              "isCritical": "true",
              "nextStep": "ExecuteLinuxCommandRX"
            },
            {
              "name": "FilterWD",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "warmup-delivery"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations[0].Instances[0].InstanceId",
                  "Type": "String"
                }
              ],
              "isCritical": "true",
              "nextStep": "ExecuteLinuxCommandWD"
            },
            {
              "name": "FilterWX",
              "action": "aws:executeAwsApi",
              "maxAttempts": 3,
              "onFailure": "Abort",
              "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "Filters": [
                  {
                    "Name": "tag:Application",
                    "Values": [
                      "warmup-xdelivery"
                    ]
                  },
                  {
                    "Name": "instance-state-name",
                    "Values": [
                      "running"
                    ]
                  }
                ]
              },
              "outputs": [
                {
                  "Name": "InstanceIds",
                  "Selector": "$.Reservations[0].Instances[0].InstanceId",
                  "Type": "String"
                }
              ],
              "isCritical": "true",
              "nextStep": "ExecuteLinuxCommandWX"
            },
            {
              "name": "ExecuteLinuxCommandCS",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterCS.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "{{LinuxCommand}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "ExecuteLinuxCommandIS",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterIS.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "{{LinuxCommand}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "ExecuteLinuxCommandCD",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterCD.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "{{LinuxCommand}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "ExecuteLinuxCommandCX",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterCX.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "{{LinuxCommand}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "ExecuteLinuxCommandID",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterID.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "{{LinuxCommand}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "ExecuteLinuxCommandIX",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterIX.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "{{LinuxCommand}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "ExecuteLinuxCommandDD",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterDD.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "{{LinuxCommand}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "ExecuteLinuxCommandDX",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterDX.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "{{LinuxCommand}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "ExecuteLinuxCommandRD",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterRD.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "{{LinuxCommand}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "ExecuteLinuxCommandRX",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterRX.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "{{LinuxCommand}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "ExecuteLinuxCommandWD",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterWD.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "{{LinuxCommand}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            },
            {
              "name": "ExecuteLinuxCommandWX",
              "action": "aws:runCommand",
              "maxAttempts": 3,
              "timeoutSeconds": 3600,
              "inputs": {
                "DocumentName": "AWS-RunShellScript",
                "InstanceIds": [ "{{FilterWX.InstanceIds}}" ],
                "Parameters": {
                  "commands": [
                    "{{LinuxCommand}}"
                  ]
                }
              },
              "isCritical": "true",
              "isEnd": "true"
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }, "RunLinuxCommand" ] ] }
          },
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },

    "PostfixAutomationRole" : {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": [
                "ec2.amazonaws.com",
                "ssm.amazonaws.com"
              ]
            },
            "Action": [ "sts:AssumeRole" ]
          }]
        },
        "Path": "/",
        "Tags": [
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "PostfixAutomationRole" ] ] }
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          }
        ]
      }
    },
    "PostfixAutomationRolePolicies": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iam:PassRole"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "ec2:CreateTags",
                "ec2:DescribeInstances",
                "ec2:DescribeTags"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:logs:*:*:*"
              ]
            },
            {
              "Action": [
                "ssm:DescribeAutomationExecutions",
                "ssm:DescribeAutomationStepExecutions",
                "ssm:DescribeDocument",
                "ssm:DescribeInstanceInformation",
                "ssm:GetAutomationExecution",
                "ssm:GetCommandInvocation",
                "ssm:GetConnectionStatus",
                "ssm:GetDocument",
                "ssm:ListCommandInvocations",
                "ssm:ListCommands",
                "ssm:ListInstanceAssociations",
                "ssm:ListDocuments",
                "ssm:ListDocumentVersions",
                "ssm:SendCommand",
                "ssm:StartAutomationExecution"
              ],
              "Effect": "Allow",
              "Resource": [
                "*"
              ]
            }
          ]
        },
        "PolicyName": "root",
        "Roles": [
          {
            "Ref": "PostfixAutomationRole"
          }
        ]
      },
      "Type": "AWS::IAM::Policy"
    }
  },

  "Outputs" : {
    "PostfixCommandBlockSender" : {
      "Description" : "SSM Postfix Command Block Sender document name",
      "Value" : { "Ref" : "PostfixCommandBlockSender" }
    },
    "PostfixCommandUnBlockSender" : {
      "Description" : "SSM Postfix Command Block Sender document name",
      "Value" : { "Ref" : "PostfixCommandUnBlockSender" }
    },
    "PythonCommandBlockUnblockCustomer" : {
      "Description" : "SSM Python Command to Block or Unblock Customer document name",
      "Value" : { "Ref" : "PythonCommandBlockUnblockCustomer" }
    },
    "PythonSenderRecipientBlockUnblock" : {
      "Description" : "SSM Python Command to Block or Unblock Sender or Recipient document name",
      "Value" : { "Ref" : "PythonSenderRecipientBlockUnblock" }
    },
    "RunLinuxCommand" : {
      "Description" : "SSM Document to run linux shell commands in for MailOperations activities",
      "Value" : { "Ref" : "RunLinuxCommand" }
    },
    "PostfixAutomationRole": {
      "Description": "Postfix Automation role",
      "Value": { "Ref": "PostfixAutomationRole" }
    },
    "PostfixAutomationRoleArn": {
      "Description": "Postfix Automation role ARN",
      "Value": { "Fn::GetAtt" : [ "PostfixAutomationRole", "Arn" ] }
    }
  }
}
