{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Creates/Updates/Deletes the Xgemail Extract Message lambda function stored in S3.",

  "Metadata": {
    "Copyright": [
      "Copyright 2023, Sophos Limited. All rights reserved.",
      "",
      "'Sophos' and 'Sophos Anti-Virus' are registered trademarks of",
      "Sophos Limited and Sophos Group.  All other product and company",
      "names mentioned are trademarks or registered trademarks of their",
      "respective owners."
    ],

    "Comments": [
      "NOTE: The template requires a valid IAM role arn that allows",
      "the lambda code to access AWS resources."
    ]
  },

  "Parameters": {
    "FunctionDescription": {
      "Description": "Description for this function.",
      "Type": "String",
      "Default": "Triggered from a System Manager document, this Lambda function will extract an email from S3 given the Postfix queue ID."
    },

    "FunctionName": {
      "Description": "The name for this function.  Defaults to a unique physical ID.",
      "Type": "String",
      "Default": ""
    },

    "HandlerName": {
      "Description": "The name of the handler declared in source code.",
      "Type": "String"
    },

    "MemorySize": {
      "Description": "The amount of memory to allocate for this lambda function (128-1536)",
      "Type": "Number",
      "Default": "256"
    },

    "Runtime": {
      "Description": "The scripting runtime the code runs on.",
      "Type": "String",
      "Default": "python3.8"
    },

    "S3Bucket": {
      "Description": "The S3 bucket where the code has been placed.",
      "Type": "String"
    },

    "S3Key": {
      "Description": "The object key name in S3 (no slash in the beginning).",
      "Type": "String"
    },

    "Timeout": {
      "Description": "Timeout in seconds.",
      "Type": "Number",
      "Default": "300",
      "MinValue": "30",
      "MaxValue": "300"
    }
  },

  "Conditions": {
    "HasFunctionName": {
      "Fn::Not": [{ "Fn::Equals": [ { "Ref": "FunctionName" }, "" ] }]
    }
  },

  "Resources": {
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": { "Ref": "S3Bucket" },
          "S3Key": { "Ref": "S3Key" }
        },
        "Description": { "Ref": "FunctionDescription" },
        "FunctionName": {
          "Fn::If": [
            "HasFunctionName",
            { "Ref": "FunctionName" },
            { "Ref": "AWS::NoValue" }
          ]
        },
        "Handler": { "Ref": "HandlerName" },
        "Role": { "Fn::GetAtt": [ "ExtractMessageLambdaExecutionRole", "Arn" ] },
        "Runtime": { "Ref": "Runtime" },
        "Timeout": { "Ref": "Timeout" },
        "MemorySize": {"Ref": "MemorySize"},
        "ReservedConcurrentExecutions": "1",
        "Tags": [
          {
            "Key": "Application",
            "Value": "cloudemail"
          },
          {
            "Key": "BusinessUnit",
            "Value": "MSG"
          },
          {
            "Key": "Name",
            "Value": { "Ref": "FunctionName" }
          },
          {
            "Key": "OwnerEmail",
            "Value": "sophosmailops@sophos.com"
          },
          {
            "Key": "Project",
            "Value": "xgemail"
          }
        ]
      }
    },

    "LambdaFunctionVersion": {
      "Type": "AWS::Lambda::Version",
      "DependsOn": "LambdaFunction",
      "Properties": {
        "Description": {
          "Fn::Join": [ "", [
            "Sophos Central code: ",
            { "Ref": "HandlerName" }
          ]]
        },
        "FunctionName": { "Fn::GetAtt": [ "LambdaFunction", "Arn" ] }
      }
    }

  },

  "ExtractMessageLambdaExecutionRole" : {
    "Type": "AWS::IAM::Role",
    "Properties": {
      "AssumeRolePolicyDocument": {
        "Version": "2012-10-17",
        "Statement": [{
          "Effect": "Allow",
          "Principal": {
            "Service": [ "lambda.amazonaws.com" ]
          },
          "Action": [ "sts:AssumeRole" ]
        }]
      },
      "Path": "/",
      "Tags": [
        {
          "Key": "Application",
          "Value": "cloudemail"
        },
        {
          "Key": "BusinessUnit",
          "Value": "MSG"
        },
        {
          "Key": "Name",
          "Value": { "Fn::Join": [ "-", [ { "Ref" : "AWS::StackName" }, "ExtractMessageLambdaExecutionRole" ] ] }
        },
        {
          "Key": "Project",
          "Value": "xgemail"
        },
        {
          "Key": "OwnerEmail",
          "Value": "sophosmailops@sophos.com"
        }
      ]
    }
  },
  "ExtractMessageLambdaExecutionRolePolicies": {
    "Properties": {
      "PolicyDocument": {
        "Statement": [
          {
            "Action": [
              "athena:StartQueryExecution",
              "athena:GetQueryResults",
              "athena:GetWorkGroup",
              "athena:GetQueryExecution"
            ],
            "Effect": "Allow",
            "Resource": [
              "arn:aws:athena:eu-central-1:202058678495:workgroup/primary"
            ]
          },
          {
            "Action": [
              "glue:GetDatabase",
              "glue:GetPartitions",
              "glue:GetTable"
            ],
            "Effect": "Allow",
            "Resource": [
              "arn:aws:glue:eu-central-1:202058678495:catalog",
              "arn:aws:glue:eu-central-1:202058678495:database/series_datalake",
              "arn:aws:glue:eu-central-1:202058678495:table/series_datalake/telemetry_email_telemetry"
            ]
          },
          {
            "Action": [
              "s3:GetBucketLocation",
              "s3:GetObject",
              "s3:ListBucket"
            ],
            "Effect": "Allow",
            "Resource": [
              "arn:aws:s3:::cloud-prod-eu-central-1-lambda/*",
              "arn:aws:s3:::cloud-prod-eu-central-1-lambda",
              "arn:aws:s3:::private-cloud-prod-eu-central-1-cloudemail-xgemail-cust-submit/*",
              "arn:aws:s3:::private-cloud-prod-eu-west-1-cloudemail-xgemail-cust-submit/*",
              "arn:aws:s3:::private-cloud-prod-us-east-2-cloudemail-xgemail-cust-submit/*",
              "arn:aws:s3:::private-cloud-prod-us-west-2-cloudemail-xgemail-cust-submit/*",
              "arn:aws:s3:::private-cloud-prod-eu-central-1-cloudemail-xgemail-submit/*",
              "arn:aws:s3:::private-cloud-prod-eu-west-1-cloudemail-xgemail-submit/*",
              "arn:aws:s3:::private-cloud-prod-us-east-2-cloudemail-xgemail-submit/*",
              "arn:aws:s3:::private-cloud-prod-us-west-2-cloudemail-xgemail-submit/*",
              "arn:aws:s3:::private-cloud-prod-eu-central-1-cloudemail-xgemail-cust-submit",
              "arn:aws:s3:::private-cloud-prod-eu-west-1-cloudemail-xgemail-cust-submit",
              "arn:aws:s3:::private-cloud-prod-us-east-2-cloudemail-xgemail-cust-submit",
              "arn:aws:s3:::private-cloud-prod-us-west-2-cloudemail-xgemail-cust-submit",
              "arn:aws:s3:::private-cloud-prod-eu-central-1-cloudemail-xgemail-submit",
              "arn:aws:s3:::private-cloud-prod-eu-west-1-cloudemail-xgemail-submit",
              "arn:aws:s3:::private-cloud-prod-us-east-2-cloudemail-xgemail-submit",
              "arn:aws:s3:::private-cloud-prod-us-west-2-cloudemail-xgemail-submit",
              "arn:aws:s3:::data-series-shared-eu-central-1-prod-tlm-datalake/*",
              "arn:aws:s3:::data-series-shared-eu-central-1-prod-tlm-datalake"
            ]
          },
          {
            "Action": [
              "s3:GetBucketLocation",
              "s3:ListBucket",
              "s3:PutObject",
              "s3:GetObject"
            ],
            "Effect": "Allow",
            "Resource": [
              "arn:aws:s3:::aws-athena-query-results-202058678495-eu-central-1/*",
              "arn:aws:s3:::aws-athena-query-results-202058678495-eu-central-1"
            ]
          },
          {
            "Action": [
              "lambda:*"
            ],
            "Effect": "Allow",
            "Resource": [
              "*"
            ]
          },
          {
            "Action": [
              "logs:CreateLogGroup",
              "logs:CreateLogStream",
              "logs:PutLogEvents"
            ],
            "Effect": "Allow",
            "Resource": [
              "arn:aws:logs:*:*:*"
            ]
          },
          {
            "Action": [
              "ssm:DescribeDocument",
              "ssm:GetCommandInvocation",
              "ssm:ListInstanceAssociations",
              "ssm:ListCommands",
              "ssm:SendCommand"
            ],
            "Effect": "Allow",
            "Resource": [
              "*"
            ]
          }
        ]
      },
      "PolicyName": "root",
      "Roles": [
        {
          "Ref": "ExtractMessageLambdaExecutionRole"
        }
      ]
    },
    "Type": "AWS::IAM::Policy"
  },

  "Outputs": {
    "LambdaFunction": {
      "Description": "The Lambda Function's Name.",
      "Value": { "Ref": "LambdaFunction" }
    },
    "LambdaFunctionArn": {
      "Description": "ARN of the function created.",
      "Value": { "Fn::GetAtt": [ "LambdaFunction", "Arn" ] }
    }
  }
}
