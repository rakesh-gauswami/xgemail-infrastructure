{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "ElasticSearch for Sophos Email.",
  "Metadata": {
    "Copyright": [
      "Copyright 2018, Sophos Limited. All rights reserved.",
      "",
      "'Sophos' and 'Sophos Anti-Virus' are registered trademarks of",
      "Sophos Limited and Sophos Group.  All other product and company",
      "names mentioned are trademarks or registered trademarks of their",
      "respective owners."
    ],
    "Comments": [
      "This ElasticSearch template creates an AWS managed ElasticSearch domain cluster"
    ]
  },
  "Parameters": {
    "EbsVolumeSize": {
      "Description": "The size of the EBS volume for each data node.",
      "Type": "Number",
      "MinValue": "10",
      "MaxValue": "1500",
      "ConstraintDescription": "The minimum and maximum size of an EBS volume depends on the EBS volume type and the instance type to which it is attached."
    },
    "Environment": {
      "Description": "(dev, dev2, dev3, dev4, dev5, qa, etc...)",
      "Type": "String",
      "AllowedValues": [ "dev", "dev2", "dev3", "dev4", "dev5", "qa", "prod", "inf", "qainf" ]
    },
    "HopperIpAccess": {
      "Description": "Public IP of Hopper for ssh tunnel access.",
      "Type": "String"
    },
    "HostedZoneName": {
      "Type": "String",
      "Description": "The DNS name of an existing Amazon Route 53 hosted zone",
      "AllowedPattern": "(?!-)[a-zA-Z0-9-.]{1,63}(?<!-)",
      "ConstraintDescription": "must be a valid DNS zone name."
    },
    "MasterNodeType": {
      "Description": "The compute and memory capacity of the master nodes in the ElasticSearch Domain",
      "Type": "String"
    },
    "NodeType": {
      "Description": "The compute and memory capacity of the nodes in the ElasticSearch Domain",
      "Type": "String"
    },
    "NumberOfInstances": {
      "Description": "The count of data instances of the ElasticSearch Domain",
      "Type": "Number",
      "MinValue": "1",
      "MaxValue": "20",
      "ConstraintDescription": "Must be between 1 and 20 (for t2 instances between 1 and 10); must be even number if zone awareness is enabled."
    },
    "NumberOfMasterInstances": {
      "Description": "The count of master instances of the ElasticSearch Domain",
      "Type": "Number",
      "MinValue": "2",
      "MaxValue": "5",
      "ConstraintDescription": "Must be between 2 and 5."
    },
    "SnapshotStartHour": {
      "Description": "The snapshot start hour of the ElasticSearch Domain",
      "Type": "Number",
      "Default": "0",
      "MinValue": "0",
      "MaxValue": "23",
      "ConstraintDescription": "Must be between 0 and 23."
    },
    "VpcNameLowerCase": {
      "Description": "Name of the current VPC in lower case",
      "Type": "String"
    }
  },

  "Resources": {
    "ElasticSearchDomain": {
      "Type": "AWS::Elasticsearch::Domain",
      "Properties": {
        "ElasticsearchVersion": "5.5",
        "ElasticsearchClusterConfig": {
          "DedicatedMasterEnabled": "true",
          "InstanceCount": { "Ref": "NumberOfInstances" },
          "ZoneAwarenessEnabled": "false",
          "InstanceType": { "Ref": "NodeType" },
          "DedicatedMasterType": { "Ref": "MasterNodeType" },
          "DedicatedMasterCount": { "Ref": "NumberOfMasterInstances" }
        },
        "EBSOptions": {
          "EBSEnabled": "true",
          "VolumeSize": { "Ref": "EbsVolumeSize" },
          "VolumeType": "gp2"
        },
        "SnapshotOptions": {
          "AutomatedSnapshotStartHour": { "Ref": "SnapshotStartHour" }
        },
        "AccessPolicies": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": { "Fn::Join": ["",["arn:aws:iam::",{"Ref":"AWS::AccountId"}, ":root" ]]  }
              },
              "Action": "es:*",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": "es:ESHttp*",
              "Condition": {
                "IpAddress": {
                  "aws:SourceIp": [
                    { "Ref": "HopperIpAccess" }
                  ]
                }
              },
              "Resource": {
                "Fn::Join": [ ":",
                  [
                    "arn:aws:es",
                    { "Ref": "AWS::Region" },
                    { "Ref": "AWS::AccountId" },
                    "domain/*"
                  ]
                ]
              }
            }
          ]
        },
        "AdvancedOptions": {
          "rest.action.multi.allow_explicit_index": "true",
          "indices.fielddata.cache.size": ""
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [ ".",
                [
                  "toc-es",
                  { "Ref": "VpcNameLowerCase" },
                  { "Ref": "AWS::Region" },
                  { "Ref": "Environment" },
                  { "Ref": "HostedZoneName" }
                ]
              ]
            }
          },
          {
            "Key": "Stack",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ]
      }
    },

    "ElasticSearchDomainRecordSet": {
      "Type": "AWS::Route53::RecordSet",
      "DependsOn": "ElasticSearchDomain",
      "Properties": {
        "Name": {
          "Fn::Join": [ ".",
            [
              "toc-es",
              { "Ref": "VpcNameLowerCase" },
              { "Ref": "AWS::Region" },
              { "Ref": "Environment" },
              { "Ref": "HostedZoneName" }
            ]
          ]
        },
        "Comment": "RecordSet built for ToC ElasticSearch Domain",
        "HostedZoneName": {
          "Fn::Join": [ ".",
            [
              { "Ref": "Environment" },
              { "Ref": "HostedZoneName" }
            ]
          ]
        },
        "Type": "CNAME",
        "TTL": "300",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "ElasticSearchDomain",
              "DomainEndpoint"
            ]
          }
        ]
      }
    }
  },

  "Outputs": {
    "ElasticSearchDomain": {
      "Description": "ElasticSearchDomain Id",
      "Value": { "Ref": "ElasticSearchDomain" }

    },
    "ElasticSearchDomainEndpoint": {
      "Description": "ElasticSearchDomain Endpoint",
      "Value": {
        "Fn::GetAtt": [
          "ElasticSearchDomain",
          "DomainEndpoint"
        ]
      }
    },
    "ElasticSearchDomainArn": {
      "Description": "ElasticSearchDomain DomainArn",
      "Value": {
        "Fn::GetAtt": [
          "ElasticSearchDomain",
          "DomainArn"
        ]
      }
    },
    "ElasticSearchRecordSet": {
      "Description": "ElasticSearchDomain RecordSet",
      "Value": { "Ref": "ElasticSearchDomainRecordSet" }
    }
  }
}
