---
# Inbound Monitor Send Lambda Function
- name: "Create a zip archive of inbound monitor send lambda function"
  archive:
    path:
    - /work/lambda/xgemail_inbound_monitor_send.js
    dest: "{{role_path}}/xgemail_inbound_monitor_send.zip"
    format: zip

- name: "Upload inbound monitor send lambda function for {{stack.lambda.inbound_monitor_send_lambda_function}} to the config bucket {{s3.lambda_bucket}}"
  s3:
    mode:               put
    region:             "{{account.region}}"
    bucket:             "{{s3.lambda_bucket}}"
    object:             "lambda/{{build.number}}/xgemail_inbound_monitor_send.zip"
    src:                "{{role_path}}/xgemail_inbound_monitor_send.zip"
    overwrite:          always

# Inbound Microservice Monitor Send Lambda Function
- name: "Create a zip archive of inbound microservice monitor send lambda function"
  archive:
    path:
      - /work/lambda/xgemail_inbound_ms_monitor_send.js
    dest: "{{role_path}}/xgemail_inbound_ms_monitor_send.zip"
    format: zip

- name: "Upload inbound microservice monitor send lambda function for {{stack.lambda.inbound_ms_monitor_send_lambda_function}} to the config bucket {{s3.lambda_bucket}}"
  s3:
    mode:               put
    region:             "{{account.region}}"
    bucket:             "{{s3.lambda_bucket}}"
    object:             "lambda/{{build.number}}/xgemail_inbound_ms_monitor_send.zip"
    src:                "{{role_path}}/xgemail_inbound_ms_monitor_send.zip"
    overwrite:          always

- name: "Gather {{stack.iam.role.cloud_email_monitor_roles}} CloudFormation Stack Output"
  cloudformation_facts:
    stack_name: "{{stack.iam.role.cloud_email_monitor_roles}}"
    region: "{{account.region}}"
  register: cloud_email_monitor_iam_output

- name: "Print {{stack.iam.role.cloud_email_monitor_roles}} CloudFormation Stack Output"
  debug:
    var: cloud_email_monitor_iam_output
    verbosity: 3

- name: "Deploy inbound monitor send lambda function {{stack.lambda.inbound_monitor_send_lambda_function}} to {{account.name}}-{{account.region}}"
  cloudformation:
    stack_name:                             "{{stack.lambda.inbound_monitor_send_lambda_function}}"
    state:                                  present
    region:                                 "{{account.region}}"
    disable_rollback:                       true
    template:                               "{{template.lambda.lambda_xgemail_inbound_monitor_template}}"
    template_parameters:
      EuCentral1MailBoxName:                "{{eu_central_1_mailbox_name}}"
      EuWest1MailBoxName:                   "{{eu_west_1_mailbox_name}}"
      FunctionName:                         "{{lambda.inbound_monitor_send_lambda_function}}"
      HandlerName:                          xgemail_inbound_monitor_send.handler
      IAMRoleArn:                           "{{cloud_email_monitor_iam_output.ansible_facts.cloudformation[stack.iam.role.cloud_email_monitor_roles].stack_outputs.LambdaXgemailMonitorSendRoleArn}}"
      S3Bucket:                             "{{s3.lambda_bucket}}"
      S3Key:                                "lambda/{{build.number}}/xgemail_inbound_monitor_send.zip"
      ScheduleExpression:                   rate(1 minute)
      SesRegion:                            "{{ses_region}}"
      UsEast2MailBoxName:                   "{{us_east_2_mailbox_name}}"
      UsWest2MailBoxName:                   "{{us_west_2_mailbox_name}}"
      UsWest2SenderMailBoxName:             "{{us_west_2_sender_mailbox_name}}"
  register: inbound_monitor_send_stack

- debug:
    var: inbound_monitor_send_stack
    verbosity: 3

- name: "Display inbound monitor send lambda function stack output"
  debug:
    msg: "{{inbound_monitor_send_stack.stack_outputs}}"
    verbosity: 2

- name: "Deploy inbound microservice monitor send lambda function {{stack.lambda.inbound_ms_monitor_send_lambda_function}} to {{account.name}}-{{account.region}}"
  cloudformation:
    stack_name:                             "{{stack.lambda.inbound_ms_monitor_send_lambda_function}}"
    state:                                  present
    region:                                 "{{account.region}}"
    disable_rollback:                       true
    template:                               "{{template.lambda.lambda_xgemail_inbound_monitor_template}}"
    template_parameters:
      EuCentral1MailBoxName:                "{{ms.eu_central_1_mailbox_name}}"
      EuWest1MailBoxName:                   "{{ms.eu_west_1_mailbox_name}}"
      FunctionName:                         "{{lambda.inbound_ms_monitor_send_lambda_function}}"
      HandlerName:                          xgemail_inbound_ms_monitor_send.handler
      IAMRoleArn:                           "{{cloud_email_monitor_iam_output.ansible_facts.cloudformation[stack.iam.role.cloud_email_monitor_roles].stack_outputs.LambdaXgemailMonitorSendRoleArn}}"
      S3Bucket:                             "{{s3.lambda_bucket}}"
      S3Key:                                "lambda/{{build.number}}/xgemail_inbound_ms_monitor_send.zip"
      ScheduleExpression:                   rate(1 minute)
      SesRegion:                            "{{ses_region}}"
      UsEast2MailBoxName:                   "{{ms.us_east_2_mailbox_name}}"
      UsWest2MailBoxName:                   "{{ms.us_west_2_mailbox_name}}"
      UsWest2SenderMailBoxName:             "{{ms.us_west_2_sender_mailbox_name}}"
  register: inbound_ms_monitor_send_stack

- debug:
    var: inbound_ms_monitor_send_stack
    verbosity: 3

- name: "Display inbound microservice monitor send lambda function stack output"
  debug:
    msg: "{{inbound_ms_monitor_send_stack.stack_outputs}}"
    verbosity: 2

# Inbound Monitor Receive Lambda Function
- name: "Create a zip archive of inbound monitor receive lambda function"
  archive:
    path:
    - /work/lambda/xgemail_inbound_monitor_receive.js
    dest: "{{role_path}}/xgemail_inbound_monitor_receive.zip"
    format: zip

- name: "Upload the Inbound monitor receive lambda function for {{stack.lambda.inbound_monitor_receive_lambda_function}} to the config bucket {{s3.lambda_bucket}}"
  s3:
    mode:               put
    region:             "{{account.region}}"
    bucket:             "{{s3.lambda_bucket}}"
    object:             "lambda/{{build.number}}/xgemail_inbound_monitor_receive.zip"
    src:                "{{role_path}}/xgemail_inbound_monitor_receive.zip"
    overwrite:          always

- name: "Deploy Inbound Monitor Receive Lambda Function {{stack.lambda.inbound_monitor_receive_lambda_function}} to {{account.name}}-{{account.region}}"
  cloudformation:
    stack_name:                             "{{stack.lambda.inbound_monitor_receive_lambda_function}}"
    state:                                  present
    region:                                 "{{account.region}}"
    disable_rollback:                       true
    template:                               "{{template.lambda.lambda_xgemail_inbound_monitor_template}}"
    template_parameters:
      EuCentral1MailBoxName:                "{{eu_central_1_mailbox_name}}"
      EuWest1MailBoxName:                   "{{eu_west_1_mailbox_name}}"
      FunctionName:                         "{{lambda.inbound_monitor_receive_lambda_function}}"
      HandlerName:                          xgemail_inbound_monitor_receive.handler
      IAMRoleArn:                           "{{cloud_email_monitor_iam_output.ansible_facts.cloudformation[stack.iam.role.cloud_email_monitor_roles].stack_outputs.LambdaXgemailMonitorReceiveRoleArn}}"
      S3Bucket:                             "{{s3.lambda_bucket}}"
      S3Key:                                "lambda/{{build.number}}/xgemail_inbound_monitor_receive.zip"
      SesRegion:                            "{{ses_region}}"
      UsEast2MailBoxName:                   "{{us_east_2_mailbox_name}}"
      UsWest2MailBoxName:                   "{{us_west_2_mailbox_name}}"
      UsWest2SenderMailBoxName:             "{{us_west_2_sender_mailbox_name}}"
  register: inbound_monitor_receive_lambda_output

- debug:
    var: inbound_monitor_receive_lambda_output
    verbosity: 3

- name: "Display Inbound Monitor Receive Lambda Function Stack Output"
  debug:
    msg: "{{inbound_monitor_receive_lambda_output.stack_outputs}}"
    verbosity: 2

# Inbound Microservice Monitor Receive Lambda Function
- name: "Create a zip archive of inbound microservice monitor receive lambda function"
  archive:
    path:
      - /work/lambda/xgemail_inbound_ms_monitor_receive.js
    dest: "{{role_path}}/xgemail_inbound_ms_monitor_receive.zip"
    format: zip

- name: "Upload the Inbound microservice monitor receive lambda function for {{stack.lambda.inbound_ms_monitor_receive_lambda_function}} to the config bucket {{s3.lambda_bucket}}"
  s3:
    mode:               put
    region:             "{{account.region}}"
    bucket:             "{{s3.lambda_bucket}}"
    object:             "lambda/{{build.number}}/xgemail_inbound_ms_monitor_receive.zip"
    src:                "{{role_path}}/xgemail_inbound_ms_monitor_receive.zip"
    overwrite:          always

- name: "Deploy Inbound Microservice Monitor Receive Lambda Function {{stack.lambda.inbound_ms_monitor_receive_lambda_function}} to {{account.name}}-{{account.region}}"
  cloudformation:
    stack_name:                             "{{stack.lambda.inbound_ms_monitor_receive_lambda_function}}"
    state:                                  present
    region:                                 "{{account.region}}"
    disable_rollback:                       true
    template:                               "{{template.lambda.lambda_xgemail_inbound_monitor_template}}"
    template_parameters:
      EuCentral1MailBoxName:                "{{ms.eu_central_1_mailbox_name}}"
      EuWest1MailBoxName:                   "{{ms.eu_west_1_mailbox_name}}"
      FunctionName:                         "{{lambda.inbound_ms_monitor_receive_lambda_function}}"
      HandlerName:                          xgemail_inbound_ms_monitor_receive.handler
      IAMRoleArn:                           "{{cloud_email_monitor_iam_output.ansible_facts.cloudformation[stack.iam.role.cloud_email_monitor_roles].stack_outputs.LambdaXgemailMonitorReceiveRoleArn}}"
      S3Bucket:                             "{{s3.lambda_bucket}}"
      S3Key:                                "lambda/{{build.number}}/xgemail_inbound_ms_monitor_receive.zip"
      SesRegion:                            "{{ses_region}}"
      UsEast2MailBoxName:                   "{{ms.us_east_2_mailbox_name}}"
      UsWest2MailBoxName:                   "{{ms.us_west_2_mailbox_name}}"
      UsWest2SenderMailBoxName:             "{{ms.us_west_2_sender_mailbox_name}}"
  register: inbound_ms_monitor_receive_lambda_output

- debug:
    var: inbound_ms_monitor_receive_lambda_output
    verbosity: 3

- name: "Display Inbound Microservice Monitor Receive Lambda Function Stack Output"
  debug:
    msg: "{{inbound_ms_monitor_receive_lambda_output.stack_outputs}}"
    verbosity: 2

- name: "Deploy Outbound Monitor Send Lambda Function {{stack.lambda.outbound_monitor_send_lambda_function}} to {{account.name}}-{{account.region}}"
  cloudformation:
    stack_name:                             "{{stack.lambda.outbound_monitor_send_lambda_function}}"
    state:                                  present
    region:                                 "{{account.region}}"
    disable_rollback:                       true
    template:                               "{{template.lambda.lambda_xgemail_outbound_monitor_template}}"
    template_parameters:
      EuCentral1Id:                         "{{eu_central_1_id}}"
      EuCentral1HostedZoneName:             "{{eu_central_1_hostedZoneName}}"
      EuCentral1PrivKeyPath:                "{{eu_central_1_private_key}}"
      EuCentral1PubKeyPath:                 "{{eu_central_1_public_key}}"
      EuCentral1PubKeyThumbprintPath:       "{{eu_central_1_public_thumb_print}}"
      EuCentral1MailBoxName:                 "{{eu_central_1_mailbox_name}}"
      Euwest1Id:                            "{{eu_west_1_id}}"
      EuWest1HostedZoneName:                "{{eu_west_1_hostedZoneName}}"
      EuWest1PrivKeyPath:                   "{{eu_west_1_private_key}}"
      Euwest1PubKeyPath:                    "{{eu_west_1_public_key}}"
      Euwest1PubKeyThumbprintPath:          "{{eu_west_1_public_thumb_print}}"
      EuWest1MailBoxName:                   "{{eu_west_1_mailbox_name}}"
      FunctionName:                         "{{lambda.outbound_monitor_send_lambda_function}}"
      HandlerName:                          xgemail_outbound_monitor_send.handler
      IAMRoleArn:                           "{{cloud_email_monitor_iam_output.ansible_facts.cloudformation[stack.iam.role.cloud_email_monitor_roles].stack_outputs.LambdaXgemailOutboundMonitorSendRoleArn}}"
      S3Bucket:                             "{{s3.lambda_bucket}}"
      S3BucketforCerts:                     "cloud-{{account.name}}-connections"
      S3Key:                                "lambda/{{build.number}}/xgemail_outbound_monitor_send.zip"
      ScheduleExpression:                   rate(1 minute)
      TenantId:                             "{{tenant_id}}"
      UsEast2Id:                            "{{us_east_2_id}}"
      UsEast2HostedZoneName:                "{{us_east_2_hostedZoneName}}"
      UsEast2PrivKeyPath:                   "{{us_east_2_private_key}}"
      UsEast2PubKeyPath:                    "{{us_east_2_public_key}}"
      UsEast2PubKeyThumbprintPath:          "{{us_east_2_public_thumb_print}}"
      UsEast2MailBoxName:                   "{{us_east_2_mailbox_name}}"
      UsWest2Id:                            "{{us_west_2_id}}"
      UsWest2HostedZoneName:                "{{us_west_2_hostedZoneName}}"
      UsWest2RecipientHostedZoneName:       "{{us_west_2_recipient_hostedZoneName}}"
      UsWest2PrivKeyPath:                   "{{us_west_2_private_key}}"
      UsWest2PubKeyPath:                    "{{us_west_2_public_key}}"
      UsWest2PubKeyThumbprintPath:          "{{us_west_2_public_thumb_print}}"
      UsWest2MailBoxName:                   "{{us_west_2_mailbox_name}}"
      UsWest2SenderMailBoxName:             "{{us_west_2_sender_mailbox_name}}"
  register: outbound_monitor_send_stack

- debug:
    var: outbound_monitor_send_stack
    verbosity: 3

- name: "Display Outbound Monitor Send Lambda Function Stack Output"
  debug:
    msg: "{{outbound_monitor_send_stack.stack_outputs}}"
    verbosity: 2

# Outbound Monitor Receive Lambda Function
- name: "Create a zip archive of outbound monitor receive lambda function"
  archive:
    path:
    - /work/lambda/xgemail_outbound_monitor_receive.js
    dest: "{{role_path}}/xgemail_outbound_monitor_receive.zip"
    format: zip

- name: "Upload the outbound monitor receive lambda function for {{stack.lambda.outbound_monitor_receive_lambda_function}} to the config bucket {{s3.lambda_bucket}}"
  s3:
    mode:               put
    region:             "{{account.region}}"
    bucket:             "{{s3.lambda_bucket}}"
    object:             "lambda/{{build.number}}/xgemail_outbound_monitor_receive.zip"
    src:                "{{role_path}}/xgemail_outbound_monitor_receive.zip"
    overwrite:          always

- name: "Deploy outbound Monitor Receive Lambda Function {{stack.lambda.outbound_monitor_receive_lambda_function}} to {{account.name}}-{{account.region}}"
  cloudformation:
    stack_name:                             "{{stack.lambda.outbound_monitor_receive_lambda_function}}"
    state:                                  present
    region:                                 "{{account.region}}"
    disable_rollback:                       true
    template:                               "{{template.lambda.lambda_xgemail_outbound_monitor_template}}"
    template_parameters:
      EuCentral1Id:                         "{{eu_central_1_id}}"
      EuCentral1HostedZoneName:             "{{eu_central_1_hostedZoneName}}"
      EuCentral1PrivKeyPath:                "{{eu_central_1_private_key}}"
      EuCentral1PubKeyPath:                 "{{eu_central_1_public_key}}"
      EuCentral1PubKeyThumbprintPath:       "{{eu_central_1_public_thumb_print}}"
      EuCentral1MailBoxName:                "{{eu_central_1_mailbox_name}}"
      Euwest1Id:                            "{{eu_west_1_id}}"
      EuWest1HostedZoneName:                "{{eu_west_1_hostedZoneName}}"
      EuWest1PrivKeyPath:                   "{{eu_west_1_private_key}}"
      Euwest1PubKeyPath:                    "{{eu_west_1_public_key}}"
      Euwest1PubKeyThumbprintPath:          "{{eu_west_1_public_thumb_print}}"
      EuWest1MailBoxName:                   "{{eu_west_1_mailbox_name}}"
      FunctionName:                         "{{lambda.outbound_monitor_receive_lambda_function}}"
      HandlerName:                          xgemail_outbound_monitor_receive.handler
      IAMRoleArn:                           "{{cloud_email_monitor_iam_output.ansible_facts.cloudformation[stack.iam.role.cloud_email_monitor_roles].stack_outputs.LambdaXgemailOutboundMonitorReceiveRoleArn}}"
      S3Bucket:                             "{{s3.lambda_bucket}}"
      S3BucketforCerts:                     "cloud-{{account.name}}-connections"
      S3Key:                                "lambda/{{build.number}}/xgemail_outbound_monitor_receive.zip"
      TenantId:                             "{{tenant_id}}"
      UsEast2Id:                            "{{us_east_2_id}}"
      UsEast2HostedZoneName:                "{{us_east_2_hostedZoneName}}"
      UsEast2PrivKeyPath:                   "{{us_east_2_private_key}}"
      UsEast2PubKeyPath:                    "{{us_east_2_public_key}}"
      UsEast2PubKeyThumbprintPath:          "{{us_east_2_public_thumb_print}}"
      UsEast2MailBoxName:                   "{{us_east_2_mailbox_name}}"
      UsWest2Id:                            "{{us_west_2_id}}"
      UsWest2HostedZoneName:                "{{us_west_2_hostedZoneName}}"
      UsWest2RecipientHostedZoneName:       "{{us_west_2_recipient_hostedZoneName}}"
      UsWest2PrivKeyPath:                   "{{us_west_2_private_key}}"
      UsWest2PubKeyPath:                    "{{us_west_2_public_key}}"
      UsWest2PubKeyThumbprintPath:          "{{us_west_2_public_thumb_print}}"
      UsWest2MailBoxName:                   "{{us_west_2_mailbox_name}}"
      UsWest2SenderMailBoxName:             "{{us_west_2_sender_mailbox_name}}"
  register: outbound_monitor_receive_lambda_output

- debug:
    var: outbound_monitor_receive_lambda_output
    verbosity: 3

- name: "Display outbound Monitor Receive Lambda Function Stack Output"
  debug:
    msg: "{{outbound_monitor_receive_lambda_output.stack_outputs}}"
    verbosity: 2

# Encryption Outbound monitor send function
- name: "Deploy Encryption Outbound Monitor Send Lambda Function {{stack.lambda.enc_outbound_monitor_send_lambda_function}} to {{account.name}}-{{account.region}}"
  cloudformation:
    stack_name:                             "{{stack.lambda.enc_outbound_monitor_send_lambda_function}}"
    state:                                  present
    region:                                 "{{account.region}}"
    disable_rollback:                       true
    template:                               "{{template.lambda.lambda_xgemail_outbound_monitor_template}}"
    template_parameters:
      EuCentral1Id:                         "{{enc.eu_central_1_id}}"
      EuCentral1HostedZoneName:             "{{enc.eu_central_1_hostedZoneName}}"
      EuCentral1PrivKeyPath:                "{{enc.eu_central_1_private_key}}"
      EuCentral1PubKeyPath:                 "{{enc.eu_central_1_public_key}}"
      EuCentral1PubKeyThumbprintPath:       "{{enc.eu_central_1_public_thumb_print}}"
      EuCentral1MailBoxName:                "{{enc.eu_central_1_mailbox_name}}"
      Euwest1Id:                            "{{enc.eu_west_1_id}}"
      EuWest1HostedZoneName:                "{{enc.eu_west_1_hostedZoneName}}"
      EuWest1PrivKeyPath:                   "{{enc.eu_west_1_private_key}}"
      Euwest1PubKeyPath:                    "{{enc.eu_west_1_public_key}}"
      Euwest1PubKeyThumbprintPath:          "{{enc.eu_west_1_public_thumb_print}}"
      EuWest1MailBoxName:                   "{{enc.eu_west_1_mailbox_name}}"
      FunctionName:                         "{{lambda.enc_outbound_monitor_send_lambda_function}}"
      HandlerName:                          xgemail_encryption_outbound_monitor_send.handler
      IAMRoleArn:                           "{{cloud_email_monitor_iam_output.ansible_facts.cloudformation[stack.iam.role.cloud_email_monitor_roles].stack_outputs.LambdaXgemailOutboundMonitorSendRoleArn}}"
      S3Bucket:                             "{{s3.lambda_bucket}}"
      S3BucketforCerts:                     "cloud-{{account.name}}-connections"
      S3Key:                                "lambda/{{build.number}}/xgemail_encryption_outbound_monitor_send.zip"
      ScheduleExpression:                   rate(1 minute)
      TenantId:                             "{{tenant_id}}"
      UsEast2Id:                            "{{enc.us_east_2_id}}"
      UsEast2HostedZoneName:                "{{enc.us_east_2_hostedZoneName}}"
      UsEast2PrivKeyPath:                   "{{enc.us_east_2_private_key}}"
      UsEast2PubKeyPath:                    "{{enc.us_east_2_public_key}}"
      UsEast2PubKeyThumbprintPath:          "{{enc.us_east_2_public_thumb_print}}"
      UsEast2MailBoxName:                   "{{enc.us_east_2_mailbox_name}}"
      UsWest2Id:                            "{{enc.us_west_2_id}}"
      UsWest2HostedZoneName:                "{{enc.us_west_2_hostedZoneName}}"
      UsWest2RecipientHostedZoneName:       "{{enc.us_west_2_recipient_hostedZoneName}}"
      UsWest2PrivKeyPath:                   "{{enc.us_west_2_private_key}}"
      UsWest2PubKeyPath:                    "{{enc.us_west_2_public_key}}"
      UsWest2PubKeyThumbprintPath:          "{{enc.us_west_2_public_thumb_print}}"
      UsWest2MailBoxName:                   "{{enc.us_west_2_mailbox_name}}"
      UsWest2SenderMailBoxName:             "{{us_west_2_sender_mailbox_name}}"
  register: encryption_outbound_monitor_send_stack

- debug:
    var: encryption_outbound_monitor_send_stack
    verbosity: 3

- name: "Display Outbound Monitor Send Lambda Function Stack Output"
  debug:
    msg: "{{encryption_outbound_monitor_send_stack.stack_outputs}}"
    verbosity: 2

# Encryption outbound monitor receive lambda function

- name: "Create a zip archive of encryption outbound monitor receive lambda function"
  archive:
    path:
      - /work/lambda/xgemail_encryption_outbound_monitor_receive.js
    dest: "{{role_path}}/xgemail_encryption_outbound_monitor_receive.zip"
    format: zip

- name: "Upload the encryption outbound monitor receive lambda function for {{stack.lambda.enc_outbound_monitor_receive_lambda_function}} to the config bucket {{s3.lambda_bucket}}"
  s3:
    mode:               put
    region:             "{{account.region}}"
    bucket:             "{{s3.lambda_bucket}}"
    object:             "lambda/{{build.number}}/xgemail_encryption_outbound_monitor_receive.zip"
    src:                "{{role_path}}/xgemail_encryption_outbound_monitor_receive.zip"
    overwrite:          always

- name: "Deploy Encryption outbound Monitor Receive Lambda Function {{stack.lambda.outbound_monitor_receive_lambda_function}} to {{account.name}}-{{account.region}}"
  cloudformation:
    stack_name:                             "{{stack.lambda.enc_outbound_monitor_receive_lambda_function}}"
    state:                                  present
    region:                                 "{{account.region}}"
    disable_rollback:                       true
    template:                               "{{template.lambda.lambda_xgemail_outbound_monitor_template}}"
    template_parameters:
      EuCentral1Id:                         "{{enc.eu_central_1_id}}"
      EuCentral1HostedZoneName:             "{{enc.eu_central_1_hostedZoneName}}"
      EuCentral1PrivKeyPath:                "{{enc.eu_central_1_private_key}}"
      EuCentral1PubKeyPath:                 "{{enc.eu_central_1_public_key}}"
      EuCentral1PubKeyThumbprintPath:       "{{enc.eu_central_1_public_thumb_print}}"
      EuCentral1MailBoxName:                "{{enc.eu_central_1_mailbox_name}}"
      Euwest1Id:                            "{{enc.eu_west_1_id}}"
      EuWest1HostedZoneName:                "{{enc.eu_west_1_hostedZoneName}}"
      EuWest1PrivKeyPath:                   "{{enc.eu_west_1_private_key}}"
      Euwest1PubKeyPath:                    "{{enc.eu_west_1_public_key}}"
      Euwest1PubKeyThumbprintPath:          "{{enc.eu_west_1_public_thumb_print}}"
      EuWest1MailBoxName:                   "{{enc.eu_west_1_mailbox_name}}"
      FunctionName:                         "{{lambda.enc_outbound_monitor_receive_lambda_function}}"
      HandlerName:                          xgemail_encryption_outbound_monitor_receive.handler
      IAMRoleArn:                           "{{cloud_email_monitor_iam_output.ansible_facts.cloudformation[stack.iam.role.cloud_email_monitor_roles].stack_outputs.LambdaXgemailOutboundMonitorReceiveRoleArn}}"
      S3Bucket:                             "{{s3.lambda_bucket}}"
      S3BucketforCerts:                     "cloud-{{account.name}}-connections"
      S3Key:                                "lambda/{{build.number}}/xgemail_encryption_outbound_monitor_receive.zip"
      TenantId:                             "{{tenant_id}}"
      UsEast2Id:                            "{{enc.us_east_2_id}}"
      UsEast2HostedZoneName:                "{{enc.us_east_2_hostedZoneName}}"
      UsEast2PrivKeyPath:                   "{{enc.us_east_2_private_key}}"
      UsEast2PubKeyPath:                    "{{enc.us_east_2_public_key}}"
      UsEast2PubKeyThumbprintPath:          "{{enc.us_east_2_public_thumb_print}}"
      UsEast2MailBoxName:                   "{{enc.us_east_2_mailbox_name}}"
      UsWest2Id:                            "{{enc.us_west_2_id}}"
      UsWest2HostedZoneName:                "{{enc.us_west_2_hostedZoneName}}"
      UsWest2RecipientHostedZoneName:       "{{enc.us_west_2_recipient_hostedZoneName}}"
      UsWest2PrivKeyPath:                   "{{enc.us_west_2_private_key}}"
      UsWest2PubKeyPath:                    "{{enc.us_west_2_public_key}}"
      UsWest2PubKeyThumbprintPath:          "{{enc.us_west_2_public_thumb_print}}"
      UsWest2MailBoxName:                   "{{enc.us_west_2_mailbox_name}}"
      UsWest2SenderMailBoxName:             "{{us_west_2_sender_mailbox_name}}"
  register: encryption_outbound_monitor_receive_lambda_output

- debug:
    var: encryption_outbound_monitor_receive_lambda_output
    verbosity: 3

- name: "Display outbound Monitor Receive Lambda Function Stack Output"
  debug:
    msg: "{{encryption_outbound_monitor_receive_lambda_output.stack_outputs}}"
    verbosity: 2

# MailFlow Outbound monitor send function
- name: "Deploy MailFlow Outbound Monitor Send Lambda Function {{stack.lambda.mf_outbound_monitor_send_lambda_function}} to {{account.name}}-{{account.region}}"
  cloudformation:
    stack_name:                             "{{stack.lambda.mf_outbound_monitor_send_lambda_function}}"
    state:                                  present
    region:                                 "{{account.region}}"
    disable_rollback:                       true
    template:                               "{{template.lambda.lambda_xgemail_outbound_monitor_template}}"
    template_parameters:
      EuCentral1Id:                         "{{mf.eu_central_1_id}}"
      EuCentral1HostedZoneName:             "{{mf.eu_central_1_hostedZoneName}}"
      EuCentral1PrivKeyPath:                "{{mf.eu_central_1_private_key}}"
      EuCentral1PubKeyPath:                 "{{mf.eu_central_1_public_key}}"
      EuCentral1PubKeyThumbprintPath:       "{{mf.eu_central_1_public_thumb_print}}"
      EuCentral1MailBoxName:                "{{mf.eu_central_1_mailbox_name}}"
      Euwest1Id:                            "{{mf.eu_west_1_id}}"
      EuWest1HostedZoneName:                "{{mf.eu_west_1_hostedZoneName}}"
      EuWest1PrivKeyPath:                   "{{mf.eu_west_1_private_key}}"
      Euwest1PubKeyPath:                    "{{mf.eu_west_1_public_key}}"
      Euwest1PubKeyThumbprintPath:          "{{mf.eu_west_1_public_thumb_print}}"
      EuWest1MailBoxName:                   "{{mf.eu_west_1_mailbox_name}}"
      FunctionName:                         "{{lambda.mf_outbound_monitor_send_lambda_function}}"
      HandlerName:                          xgemail_mf_outbound_monitor_send.handler
      IAMRoleArn:                           "{{cloud_email_monitor_iam_output.ansible_facts.cloudformation[stack.iam.role.cloud_email_monitor_roles].stack_outputs.LambdaXgemailOutboundMonitorSendRoleArn}}"
      S3Bucket:                             "{{s3.lambda_bucket}}"
      S3BucketforCerts:                     "cloud-{{account.name}}-connections"
      S3Key:                                "lambda/{{build.number}}/xgemail_mf_outbound_monitor_send.zip"
      ScheduleExpression:                   rate(1 minute)
      TenantId:                             "{{tenant_id}}"
      UsEast2Id:                            "{{mf.us_east_2_id}}"
      UsEast2HostedZoneName:                "{{mf.us_east_2_hostedZoneName}}"
      UsEast2PrivKeyPath:                   "{{mf.us_east_2_private_key}}"
      UsEast2PubKeyPath:                    "{{mf.us_east_2_public_key}}"
      UsEast2PubKeyThumbprintPath:          "{{mf.us_east_2_public_thumb_print}}"
      UsEast2MailBoxName:                   "{{mf.us_east_2_mailbox_name}}"
      UsWest2Id:                            "{{mf.us_west_2_id}}"
      UsWest2HostedZoneName:                "{{mf.us_west_2_hostedZoneName}}"
      UsWest2RecipientHostedZoneName:       "{{mf.us_west_2_recipient_hostedZoneName}}"
      UsWest2PrivKeyPath:                   "{{mf.us_west_2_private_key}}"
      UsWest2PubKeyPath:                    "{{mf.us_west_2_public_key}}"
      UsWest2PubKeyThumbprintPath:          "{{mf.us_west_2_public_thumb_print}}"
      UsWest2MailBoxName:                   "{{mf.us_west_2_mailbox_name}}"
      UsWest2SenderMailBoxName:             "{{us_west_2_sender_mailbox_name}}"
  register: mf_outbound_monitor_send_stack

- debug:
    var: mf_outbound_monitor_send_stack
    verbosity: 3

- name: "Display Outbound Monitor Send Lambda Function Stack Output"
  debug:
    msg: "{{mf_outbound_monitor_send_stack.stack_outputs}}"
    verbosity: 2

# MailFlow outbound monitor receive lambda function
- name: "Create a zip archive of mailflow outbound monitor receive lambda function"
  archive:
    path:
      - /work/lambda/xgemail_mf_outbound_monitor_receive.js
    dest: "{{role_path}}/xgemail_mf_outbound_monitor_receive.zip"
    format: zip

- name: "Upload the mailflow outbound monitor receive lambda function for {{stack.lambda.mf_outbound_monitor_receive_lambda_function}} to the config bucket {{s3.lambda_bucket}}"
  s3:
    mode:               put
    region:             "{{account.region}}"
    bucket:             "{{s3.lambda_bucket}}"
    object:             "lambda/{{build.number}}/xgemail_mf_outbound_monitor_receive.zip"
    src:                "{{role_path}}/xgemail_mf_outbound_monitor_receive.zip"
    overwrite:          always

- name: "Deploy MailFlow outbound Monitor Receive Lambda Function {{stack.lambda.outbound_monitor_receive_lambda_function}} to {{account.name}}-{{account.region}}"
  cloudformation:
    stack_name:                             "{{stack.lambda.mf_outbound_monitor_receive_lambda_function}}"
    state:                                  present
    region:                                 "{{account.region}}"
    disable_rollback:                       true
    template:                               "{{template.lambda.lambda_xgemail_outbound_monitor_template}}"
    template_parameters:
      EuCentral1Id:                         "{{mf.eu_central_1_id}}"
      EuCentral1HostedZoneName:             "{{mf.eu_central_1_hostedZoneName}}"
      EuCentral1PrivKeyPath:                "{{mf.eu_central_1_private_key}}"
      EuCentral1PubKeyPath:                 "{{mf.eu_central_1_public_key}}"
      EuCentral1PubKeyThumbprintPath:       "{{mf.eu_central_1_public_thumb_print}}"
      EuCentral1MailBoxName:                "{{mf.eu_central_1_mailbox_name}}"
      Euwest1Id:                            "{{mf.eu_west_1_id}}"
      EuWest1HostedZoneName:                "{{mf.eu_west_1_hostedZoneName}}"
      EuWest1PrivKeyPath:                   "{{mf.eu_west_1_private_key}}"
      Euwest1PubKeyPath:                    "{{mf.eu_west_1_public_key}}"
      Euwest1PubKeyThumbprintPath:          "{{mf.eu_west_1_public_thumb_print}}"
      EuWest1MailBoxName:                   "{{mf.eu_west_1_mailbox_name}}"
      FunctionName:                         "{{lambda.mf_outbound_monitor_receive_lambda_function}}"
      HandlerName:                          xgemail_mf_outbound_monitor_receive.handler
      IAMRoleArn:                           "{{cloud_email_monitor_iam_output.ansible_facts.cloudformation[stack.iam.role.cloud_email_monitor_roles].stack_outputs.LambdaXgemailOutboundMonitorReceiveRoleArn}}"
      S3Bucket:                             "{{s3.lambda_bucket}}"
      S3BucketforCerts:                     "cloud-{{account.name}}-connections"
      S3Key:                                "lambda/{{build.number}}/xgemail_mf_outbound_monitor_receive.zip"
      TenantId:                             "{{tenant_id}}"
      UsEast2Id:                            "{{mf.us_east_2_id}}"
      UsEast2HostedZoneName:                "{{mf.us_east_2_hostedZoneName}}"
      UsEast2PrivKeyPath:                   "{{mf.us_east_2_private_key}}"
      UsEast2PubKeyPath:                    "{{mf.us_east_2_public_key}}"
      UsEast2PubKeyThumbprintPath:          "{{mf.us_east_2_public_thumb_print}}"
      UsEast2MailBoxName:                   "{{mf.us_east_2_mailbox_name}}"
      UsWest2Id:                            "{{mf.us_west_2_id}}"
      UsWest2HostedZoneName:                "{{mf.us_west_2_hostedZoneName}}"
      UsWest2RecipientHostedZoneName:       "{{mf.us_west_2_recipient_hostedZoneName}}"
      UsWest2PrivKeyPath:                   "{{mf.us_west_2_private_key}}"
      UsWest2PubKeyPath:                    "{{mf.us_west_2_public_key}}"
      UsWest2PubKeyThumbprintPath:          "{{mf.us_west_2_public_thumb_print}}"
      UsWest2MailBoxName:                   "{{mf.us_west_2_mailbox_name}}"
      UsWest2SenderMailBoxName:             "{{us_west_2_sender_mailbox_name}}"
  register: mf_outbound_monitor_receive_lambda_output

- debug:
    var: mf_outbound_monitor_receive_lambda_output
    verbosity: 3

- name: "Display outbound Monitor Receive Lambda Function Stack Output"
  debug:
    msg: "{{mf_outbound_monitor_receive_lambda_output.stack_outputs}}"
    verbosity: 2

# Inbound MailFlow Monitor Send Lambda Function
- name: "Create a zip archive of inbound mailflow monitor send lambda function"
  archive:
    path:
      - /work/lambda/xgemail_inbound_mf_monitor_send.js
    dest: "{{role_path}}/xgemail_inbound_mf_monitor_send.zip"
    format: zip

- name: "Upload inbound monitor send lambda function for {{stack.lambda.inbound_mf_monitor_send_lambda_function}} to the config bucket {{s3.lambda_bucket}}"
  s3:
    mode:               put
    region:             "{{account.region}}"
    bucket:             "{{s3.lambda_bucket}}"
    object:             "lambda/{{build.number}}/xgemail_inbound_mf_monitor_send.zip"
    src:                "{{role_path}}/xgemail_inbound_mf_monitor_send.zip"
    overwrite:          always

- name: "Gather {{stack.iam.role.cloud_email_monitor_roles}} CloudFormation Stack Output"
  cloudformation_facts:
    stack_name: "{{stack.iam.role.cloud_email_monitor_roles}}"
    region: "{{account.region}}"
  register: cloud_email_monitor_iam_output

- name: "Print {{stack.iam.role.cloud_email_monitor_roles}} CloudFormation Stack Output"
  debug:
    var: cloud_email_monitor_iam_output
    verbosity: 3

- name: "Deploy inbound monitor send lambda function {{stack.lambda.inbound_mf_monitor_send_lambda_function}} to {{account.name}}-{{account.region}}"
  cloudformation:
    stack_name:                             "{{stack.lambda.inbound_mf_monitor_send_lambda_function}}"
    state:                                  present
    region:                                 "{{account.region}}"
    disable_rollback:                       true
    template:                               "{{template.lambda.lambda_xgemail_inbound_monitor_template}}"
    template_parameters:
      EuCentral1MailBoxName:                "{{mf.eu_central_1_mailbox_name}}"
      EuWest1MailBoxName:                   "{{mf.eu_west_1_mailbox_name}}"
      FunctionName:                         "{{lambda.inbound_mf_monitor_send_lambda_function}}"
      HandlerName:                          xgemail_inbound_mf_monitor_send.handler
      IAMRoleArn:                           "{{cloud_email_monitor_iam_output.ansible_facts.cloudformation[stack.iam.role.cloud_email_monitor_roles].stack_outputs.LambdaXgemailMonitorSendRoleArn}}"
      S3Bucket:                             "{{s3.lambda_bucket}}"
      S3Key:                                "lambda/{{build.number}}/xgemail_inbound_mf_monitor_send.zip"
      ScheduleExpression:                   rate(1 minute)
      SesRegion:                            "{{ses_region}}"
      UsEast2MailBoxName:                   "{{mf.us_east_2_mailbox_name}}"
      UsWest2MailBoxName:                   "{{mf.us_west_2_mailbox_name}}"
      UsWest2SenderMailBoxName:             "{{mf.us_west_2_sender_mailbox_name}}"
  register: inbound_mf_monitor_send_stack

- debug:
    var: inbound_mf_monitor_send_stack
    verbosity: 3

- name: "Display inbound mailflow monitor send lambda function stack output"
  debug:
    msg: "{{inbound_mf_monitor_send_stack.stack_outputs}}"
    verbosity: 2

# Inbound MailFlow Monitor Receive Lambda Function
- name: "Create a zip archive of inbound monitor receive lambda function"
  archive:
    path:
      - /work/lambda/xgemail_inbound_mf_monitor_receive.js
    dest: "{{role_path}}/xgemail_inbound_mf_monitor_receive.zip"
    format: zip

- name: "Upload the Inbound mailflow monitor receive lambda function for {{stack.lambda.inbound_mf_monitor_receive_lambda_function}} to the config bucket {{s3.lambda_bucket}}"
  s3:
    mode:               put
    region:             "{{account.region}}"
    bucket:             "{{s3.lambda_bucket}}"
    object:             "lambda/{{build.number}}/xgemail_inbound_mf_monitor_receive.zip"
    src:                "{{role_path}}/xgemail_inbound_mf_monitor_receive.zip"
    overwrite:          always

- name: "Deploy Inbound MailFlow Monitor Receive Lambda Function {{stack.lambda.inbound_mf_monitor_receive_lambda_function}} to {{account.name}}-{{account.region}}"
  cloudformation:
    stack_name:                             "{{stack.lambda.inbound_mf_monitor_receive_lambda_function}}"
    state:                                  present
    region:                                 "{{account.region}}"
    disable_rollback:                       true
    template:                               "{{template.lambda.lambda_xgemail_inbound_monitor_template}}"
    template_parameters:
      EuCentral1MailBoxName:                "{{mf.eu_central_1_mailbox_name}}"
      EuWest1MailBoxName:                   "{{mf.eu_west_1_mailbox_name}}"
      FunctionName:                         "{{lambda.inbound_mf_monitor_receive_lambda_function}}"
      HandlerName:                          xgemail_inbound_mf_monitor_receive.handler
      IAMRoleArn:                           "{{cloud_email_monitor_iam_output.ansible_facts.cloudformation[stack.iam.role.cloud_email_monitor_roles].stack_outputs.LambdaXgemailMonitorReceiveRoleArn}}"
      S3Bucket:                             "{{s3.lambda_bucket}}"
      S3Key:                                "lambda/{{build.number}}/xgemail_inbound_mf_monitor_receive.zip"
      SesRegion:                            "{{ses_region}}"
      UsEast2MailBoxName:                   "{{mf.us_east_2_mailbox_name}}"
      UsWest2MailBoxName:                   "{{mf.us_west_2_mailbox_name}}"
      UsWest2SenderMailBoxName:             "{{mf.us_west_2_sender_mailbox_name}}"
  register: inbound_mf_monitor_receive_lambda_output

- debug:
    var: inbound_mf_monitor_receive_lambda_output
    verbosity: 3

- name: "Display Inbound MailFlow Monitor Receive Lambda Function Stack Output"
  debug:
    msg: "{{inbound_mf_monitor_receive_lambda_output.stack_outputs}}"
    verbosity: 2
