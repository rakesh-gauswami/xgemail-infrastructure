---
- name: "Deploy Outbound Monitor Send Lambda Function {{stack.lambda.outbound_monitor_send_lambda_function}} to {{account.name}}-{{account.region}}"
  cloudformation:
    stack_name:                             "{{stack.lambda.outbound_monitor_send_lambda_function}}"
    state:                                  present
    region:                                 "{{account.region}}"
    disable_rollback:                       true
    template:                               "{{template.lambda.lambda_xgemail_outbound_monitor_template}}"
    template_parameters:
      EuCentral1Id:                         "{{eu_central_1_id}}"
      EuCentral1PrivKeyPath:                "{{eu_central_1_private_key}}"
      EuCentral1PubKeyPath:                 "{{eu_central_1_public_key}}"
      EuCentral1PubKeyThumbprintPath:       "{{eu_central_1_public_thumb_print}}"
      Euwest1Id:                            "{{eu_west_1_id}}"
      EuWest1PrivKeyPath:                   "{{eu_west_1_private_key}}"
      Euwest1PubKeyPath:                    "{{eu_west_1_public_key}}"
      Euwest1PubKeyThumbprintPath:          "{{eu_west_1_public_thumb_print}}"
      FunctionName:                         "{{lambda.outbound_monitor_send_lambda_function}}"
      HandlerName:                          xgemail_outbound_monitor_send.monitor_handler
      IAMRoleArn:                           "{{cloud_email_monitor_iam_output.ansible_facts.cloudformation[stack.iam.role.cloud_email_monitor_roles].stack_outputs.LambdaXgemailOutboundMonitorSendRoleArn}}"
      S3Bucket:                             "{{s3.lambda_bucket}}"
      S3BucketforCerts:                     "cloud-{{account.name}}-connections"
      S3Key:                                "lambda/{{build.number}}/xgemail_outbound_monitor_send.zip"
      ScheduleExpression:                   rate(1 minute)
      TenantId:                             "{{tenant_id}}"
      UsEast2Id:                            "{{us_east_2_id}}"
      UsEast2PrivKeyPath:                   "{{us_east_2_private_key}}"
      UsEast2PubKeyPath:                    "{{us_east_2_public_key}}"
      UsEast2PubKeyThumbprintPath:          "{{us_east_2_public_thumb_print}}"
      UsWest2Id:                            "{{us_west_2_id}}"
      UsWest2PrivKeyPath:                   "{{us_west_2_private_key}}"
      UsWest2PubKeyPath:                    "{{us_west_2_public_key}}"
      UsWest2PubKeyThumbprintPath:          "{{us_west_2_public_thumb_print}}"
  register: outbound_monitor_send_stack

- debug:
    var: outbound_monitor_send_stack
    verbosity: 3

- name: "Display Outbound Monitor Send Lambda Function Stack Output"
  debug:
    msg: "{{outbound_monitor_send_stack.stack_outputs}}"
    verbosity: 2

# Outbound Monitor Receive Lambda Function
- name: "Create a zip archive of outbound monitor receive lambda function"
  archive:
    path:
    - /work/lambda/xgemail_outbound_monitor_receive.js
    dest: "{{tmp_artifacts_dir}}/xgemail_outbound_monitor_receive.zip"
    format: zip

- name: "Upload the outbound monitor receive lambda function for {{stack.lambda.outbound_monitor_receive_lambda_function}} to the config bucket {{s3.lambda_bucket}}"
  s3:
    mode:               put
    region:             "{{account.region}}"
    bucket:             "{{s3.lambda_bucket}}"
    object:             "lambda/{{build.number}}/xgemail_outbound_monitor_receive.zip"
    src:                "{{tmp_artifacts_dir}}/xgemail_outbound_monitor_receive.zip"
    overwrite:          always

- name: "Deploy outbound Monitor Receive Lambda Function {{stack.lambda.outbound_monitor_receive_lambda_function}} to {{account.name}}-{{account.region}}"
  cloudformation:
    stack_name:                             "{{stack.lambda.outbound_monitor_receive_lambda_function}}"
    state:                                  present
    region:                                 "{{account.region}}"
    disable_rollback:                       true
    template:                               "{{template.lambda.lambda_xgemail_outbound_monitor_template}}"
    template_parameters:
      EuCentral1Id:                         "{{eu_central_1_id}}"
      EuCentral1PrivKeyPath:                "{{eu_central_1_private_key}}"
      EuCentral1PubKeyPath:                 "{{eu_central_1_public_key}}"
      EuCentral1PubKeyThumbprintPath:       "{{eu_central_1_public_thumb_print}}"
      Euwest1Id:                            "{{eu_west_1_id}}"
      EuWest1PrivKeyPath:                   "{{eu_west_1_private_key}}"
      Euwest1PubKeyPath:                    "{{eu_west_1_public_key}}"
      Euwest1PubKeyThumbprintPath:          "{{eu_west_1_public_thumb_print}}"
      FunctionName:                         "{{lambda.outbound_monitor_receive_lambda_function}}"
      HandlerName:                          xgemail_outbound_monitor_receive.monitor_handler
      IAMRoleArn:                           "{{cloud_email_monitor_iam_output.ansible_facts.cloudformation[stack.iam.role.cloud_email_monitor_roles].stack_outputs.LambdaXgemailOutboundMonitorReceiveRoleArn}}"
      S3Bucket:                             "{{s3.lambda_bucket}}"
      S3BucketforCerts:                     "cloud-{{account.name}}-connections"
      S3Key:                                "lambda/{{build.number}}/xgemail_outbound_monitor_receive.zip"
      ScheduleExpression:                   rate(1 minute)
      TenantId:                             "{{tenant_id}}"
      UsEast2Id:                            "{{us_east_2_id}}"
      UsEast2PrivKeyPath:                   "{{us_east_2_private_key}}"
      UsEast2PubKeyPath:                    "{{us_east_2_public_key}}"
      UsEast2PubKeyThumbprintPath:          "{{us_east_2_public_thumb_print}}"
      UsWest2Id:                            "{{us_west_2_id}}"
      UsWest2PrivKeyPath:                   "{{us_west_2_private_key}}"
      UsWest2PubKeyPath:                    "{{us_west_2_public_key}}"
      UsWest2PubKeyThumbprintPath:          "{{us_west_2_public_thumb_print}}"
  register: outbound_monitor_receive_stack

- debug:
    var: outbound_monitor_receive_stack
    verbosity: 3

- name: "Display outbound Monitor Receive Lambda Function Stack Output"
  debug:
    msg: "{{outbound_monitor_receive_stack.stack_outputs}}"
    verbosity: 2