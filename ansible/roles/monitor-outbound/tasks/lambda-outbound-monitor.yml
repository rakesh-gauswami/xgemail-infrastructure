---
# Outbound Monitor Send Lambda Function
- name: "Install jsonwebtoken package"
  npm:
    name: jsonwebtoken
    path: /work/lambda/xgemail_outbound_monitor_send

- name: "Create a zip archive of Outbound monitor send lambda function"
  archive:
    path:
    - /work/lambda/xgemail_outbound_monitor_send/xgemail_outbound_monitor_send.js
    - /work/lambda/xgemail_outbound_monitor_send/create_json_web_token.js
    - /work/lambda/xgemail_outbound_monitor_send/unit_tests/create_json_web_token_unit_test.js
    - /work/lambda/xgemail_outbound_monitor_send/node_modules/*
    dest: "{{tmp_artifacts_dir}}/xgemail_outbound_monitor_send.zip"
    format: zip

- name: "Upload the Outbound monitor send lambda function for {{stack.lambda.outbound_monitor_send_lambda_function}} to the config bucket {{s3.lambda_bucket}}"
  s3:
    mode:               put
    region:             "{{account.region}}"
    bucket:             "{{s3.lambda_bucket}}"
    object:             "lambda/{{build.number}}/xgemail_outbound_monitor_send.zip"
    src:                "{{tmp_artifacts_dir}}/xgemail_outbound_monitor_send.zip"
    overwrite:          always

- name: "Deploy Outbound Monitor Send Lambda Function {{stack.lambda.outbound_monitor_send_lambda_function}} to {{account.name}}-{{account.region}}"
  cloudformation:
    stack_name:                             "{{stack.lambda.outbound_monitor_send_lambda_function}}"
    state:                                  present
    region:                                 "{{account.region}}"
    disable_rollback:                       true
    template:                               "{{template.lambda.lambda_xgemail_outbound_monitor_send_template}}"
    template_parameters:
      Environment:                          "{{account.name}}"
      EuCentral1Id:                         "6c5cba1d-35fe-4de1-b5f5-97f5e013df99"
      EuCentral1PrivKeyPath:                "sophos-email-monitor.net.key"
      EuCentral1PubKeyPath:                 "sophos-email-monitor.net.crt"
      EuCentral1PubKeyThumbprintPath:       "sophos-email-monitor.net_sha1.txt"
      Euwest1Id:                            "16404cae-a875-45be-94eb-4d55bb974e9e"
      EuWest1PrivKeyPath:
      Euwest1PubKeyPath:
      Euwest1PubKeyThumbprintPath:
      FunctionName:                         "{{lambda.outbound_monitor_send_lambda_function}}"
      HandlerName:                          xgemail_outbound_monitor_send.monitor_handler
      IAMRoleArn:                           "{{iam_stack.stack_outputs.LambdaXgemailOutboundMonitorSendRoleArn}}"
      S3Bucket:                             "{{s3.lambda_bucket}}"
      S3BucketforCerts:                     "cloud-{{account.name}}-connections"
      S3Key:                                "lambda/{{build.number}}/xgemail_outbound_monitor_send.zip"
      ScheduleExpression:                   rate(1 minute)
      UsEast2Id:                            "3611d007-d145-4721-97bb-fb129bd2788c"
      Useast2PrivKeyPath:                   "sophos-email-monitor.us.key"
      Useast2PubKeyPath:                    "sophos-email-monitor.us.crt"
      Useast2PubKeyThumbprintPath:          "sophos-email-monitor.us_sha1.txt"
      UsWest2Id:                            "d6c9b096-233d-409d-bb8e-07b4d5b1defb"
      UsWest2PrivKeyPath:                   "sophos-email-monitor.com.key"
      UsWest2PubKeyPath:                    "sophos-email-monitor.com.crt"
      UsWest2PubKeyThumbprintPath:          "sophos-email-monitor.com_sha1.txt"
  register: outbound_monitor_send_stack

- debug:
    var: outbound_monitor_send_stack
    verbosity: 3

- name: "Display Outbound Monitor Lambda Function Stack Output"
  debug:
    msg: "{{outbound_monitor_send_stack.stack_outputs}}"
    verbosity: 2

# Outbound Monitor Receive Lambda Function
- name: "Create a zip archive of outbound monitor receive lambda function"
  archive:
    path:
    - /work/lambda/xgemail_outbound_monitor_receive.js
    dest: "{{tmp_artifacts_dir}}/xgemail_outbound_monitor_receive.zip"
    format: zip

- name: "Upload the outbound monitor receive lambda function for {{stack.lambda.outbound_monitor_receive_lambda_function}} to the config bucket {{s3.lambda_bucket}}"
  s3:
    mode:               put
    region:             "{{account.region}}"
    bucket:             "{{s3.lambda_bucket}}"
    object:             "lambda/{{build.number}}/xgemail_outbound_monitor_receive.zip"
    src:                "{{tmp_artifacts_dir}}/xgemail_outbound_monitor_receive.zip"
    overwrite:          always

- name: "Deploy outbound Monitor Receive Lambda Function {{stack.lambda.outbound_monitor_receive_lambda_function}} to {{account.name}}-{{account.region}}"
  cloudformation:
    stack_name:                             "{{stack.lambda.outbound_monitor_receive_lambda_function}}"
    state:                                  present
    region:                                 "{{account.region}}"
    disable_rollback:                       true
    template:                               "{{template.lambda.lambda_xgemail_outbound_monitor_receive_template}}"
    template_parameters:
      Environment:                          "{{account.name}}"
      FunctionName:                         "{{lambda.outbound_monitor_receive_lambda_function}}"
      HandlerName:                          xgemail_outbound_monitor_receive.monitor_handler
      IAMRoleArn:                           "{{iam_stack.stack_outputs.LambdaXgemailMonitorReceiveRoleArn}}"
      S3Bucket:                             "{{s3.lambda_bucket}}"
      S3Key:                                "lambda/{{build.number}}/xgemail_outbound_monitor_receive.zip"
      ScheduleExpression:                   rate(1 minutes)
  register: outbound_monitor_send_stack

- debug:
    var: outbound_monitor_send_stack
    verbosity: 3

- name: "Display outbound Monitor Lambda Function Stack Output"
  debug:
    msg: "{{outbound_monitor_send_stack.stack_outputs}}"
    verbosity: 2