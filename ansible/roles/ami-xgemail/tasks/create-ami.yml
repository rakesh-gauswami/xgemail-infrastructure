---
# http://docs.ansible.com/ansible/latest/ec2_ami_module.html
- name: Create Xgemail AMI from EC2 Instance {{instance_id}}
  ec2_ami:
    description: "Sophos, Inc. Prepared image of {{build.branch}}-{{ami.xgemail.application_name}}-{{build.number}}"
    instance_id: "{{instance_id}}"
    state: present
    region: "{{ami.xgemail.region}}"
    wait: yes
    wait_timeout: 1200
    name: "{{ami.xgemail.environment}}-{{build.branch}}-{{ami.xgemail.application_name}}-{{build.number}}-{{ansible_date_time.epoch}}"
    launch_permissions:
      user_ids: "{{ami.xgemail.ami_launch_permissions}}"
    tags:
      Name:         "{{ami.xgemail.environment}}-{{build.branch}}-{{ami.xgemail.application_name}}-{{build.number}}-{{ansible_date_time.epoch}}"
      branch:       "{{ami.xgemail.branch}}"
      build:        "{{ami.xgemail.build}}"
      build_id:     "{{ami.xgemail.build_id}}"
      ami_type:     "{{ami.xgemail.ami_type}}"
  register: ec2_ami_output

- name: "Display Xgemail AMI Id"
  debug:
    msg: "{{ec2_ami_output.image_id}}"
  when: ec2_ami_output.failed == false

  debug:
    msg: "{{ec2_ami_output}}"
    verbosity: 3

- lineinfile:
    path: "{{playbook_dir}}/image_id.ini"
    line: 'image_id={{ec2_ami_output.image_id}}'
    state: present
    create: yes
  when: ec2_ami_output.failed == false

- lineinfile:
    path: "{{playbook_dir}}/image_name.ini"
    line: 'image_name={{ec2_ami_output.name}}'
    state: present
    create: yes
  when: ec2_ami_output.failed == false

- copy:
    content: "{{ec2_ami_output| to_json}}"
    dest: "{{playbook_dir}}/ec2_ami_output.json"
  when: ec2_ami_output.failed == false

- lineinfile:
    path: "{{playbook_dir}}/ec2_ami_output_json.json"
    line: '{{ item.key }}={{ item.value }}'
    state: present
    create: yes
  with_dict: "{{ec2_ami_output | to_json}}"
  when: ec2_ami_output.failed == false

- lineinfile:
    path: "{{playbook_dir}}/ec2_ami_output_json.json"
    line: '{{ item.key }}={{ item.value }}'
    state: present
    create: yes
  with_dict: "{{ec2_ami_output | from_json}}"
  when: ec2_ami_output.failed == false
