#!/bin/bash
#~
#~ Syncs SAVi virus data updates (IDE files).
#~
#~ IDE files contain threat identities which allow Sophos Anti-Virus
#~ to detect and disinfect the latest malicious software and other threats.
#~
#~ IDE files are updated frequently, often several times a day.
#~
#~ Copyright: Copyright (c) 1997-2016. All rights reserved.
#~ Company: Sophos Limited or one of its affiliates.
#~

set -eu

CRON_LOCK_FILE="<%= @SOPHOSAV_PKG_SAV_TMP_DIR %>/savdid-ide-sync.lock"

function print_sha_sum()
{
  local file_name=${1:?${0}: ${FUNCNAME[0]}: missing arg1 ( file_name )}
  echo $( sha1sum "<%= @SOPHOSAV_PKG_SAV_TMP_DIR %>/$file_name" 2> /dev/null )
}

# Synchronize IDE signature under flock
(
  flock -n 101

  # remove lock file on exit
  trap 'rm -f "${CRON_LOCK_FILE}"' EXIT

  # sleep $RANDOM % 60 seconds then start (to spread the load):
  sleep $(expr $RANDOM % 60)

  # cleanup old IDE files. For example: if files ide_5.20.zip, ide_5.21.zip and ide_5.22.zip exist,
  # remove both ide_5.20.zip and ide_5.21.zip)
  find "<%= @SOPHOSAV_PKG_SAV_TMP_DIR %>" -type f -name "ide_*" | sort | head -n -1 | xargs -r rm

  LATEST_IDE_FILE=$( ls -r "<%= @SOPHOSAV_PKG_SAV_TMP_DIR %>" | grep ide_.*.zip  | head -n1 )
  if [[ -z "${LATEST_IDE_FILE}" ]];then
    SHA_BEFORE=""
  else
    SHA_BEFORE=$( print_sha_sum "${LATEST_IDE_FILE}" )
  fi

  /usr/bin/python "<%= @SOPHOSAV_PKG_SAV_TMP_DIR %>/sav-download.py" \
    -i \
    -U "<%= @SOPHOSAV_PKG_USERNAME %>" \
    -P "<%= @SOPHOSAV_PKG_PASSWORD %>" \
    -o "<%= @SOPHOSAV_PKG_SAV_TMP_DIR %>"

  LATEST_IDE_FILE=$( ls -r "<%= @SOPHOSAV_PKG_SAV_TMP_DIR %>" | grep ide_.*.zip  | head -n1 )
  SHA_AFTER=$( print_sha_sum "${LATEST_IDE_FILE}" )

  if [[ "${SHA_BEFORE}" == "${SHA_AFTER}" ]];then
    echo "No new IDE updates, exiting."
    rm -f "${CRON_LOCK_FILE}"
    exit 0
  fi

  # remove old ide files before extracting new ones. This can be
  # done while SAVi is running, because the signatures in those
  # files are cached during runtime.
  rm -f <%= @SOPHOSAV_PKG_LOCAL_DIR %>/*.ide

  # extract updated IDE files and overwrite the old ones
  echo "Updating IDE files in <%= @SOPHOSAV_PKG_LOCAL_DIR %>"
  unzip -o "<%= @SOPHOSAV_PKG_SAV_TMP_DIR %>/$LATEST_IDE_FILE" \
    -d "<%= @SOPHOSAV_PKG_LOCAL_DIR %>"

  # reload service if it is already running. Do nothing if it is not running.
  /sbin/service "<%= @SOPHOSAV_SERVICE_NAME %>" status && /sbin/service "<%= @SOPHOSAV_SERVICE_NAME %>" reload || true
) 101>"${CRON_LOCK_FILE}"
