#!/usr/bin/perl

# Sample program to extract Postfix application performance from Berkely DB.

# Slightly modified by Sophos to convert this file into a chef template parameterized on instance name.

# Copyright (c) 2009 LogicMonitor LLC

# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:

# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

use strict;
use warnings;
use File::Basename;
use File::Path;
use DB_File;
$|=1;

#Assumes script is named in form APP-reporter, and companion script to read data is APP-updater
my ($app, $remainder) = split('-',basename($0),2);

#data is stored in APP.db
my $DBFILE = '/usr/local/logicmonitor/data/'.$app.'.db';

tie(my %stats, "DB_File", "$DBFILE", O_RDONLY, 0666, $DB_HASH) || die ("Cannot open $DBFILE");

if (@ARGV) {
  my $key=$ARGV[0];
  if ($key=~ /active/)
  {
    my $qdir=`/usr/sbin/postmulti -i <%= @instance_name %> -x postconf -h queue_directory`;
    chomp($qdir);
    my $active=`find $qdir/incoming $qdir/active $qdir/maildrop -type f -print | wc -l | awk '{print \$1}'`;
    print $active;
  } elsif ($key=~ /deferred/)
  {
    my $qdir=`/usr/sbin/postmulti -i <%= @instance_name %> -x postconf -h queue_directory`;
    chomp($qdir);
    my $deferred=`find $qdir/deferred -type f -print | wc -l | awk '{print \$1}'`;
    print $deferred;
  } else {
    if ( $stats{$key} ) {print "  $stats{$key}\n"} else { print "0\n" } ;
  }
}
else {
  foreach (sort keys %stats) {
    print "$_ $stats{$_}\n" ;
  } ;
  my $qdir=`/usr/sbin/postmulti -i <%= @instance_name %> -x postconf -h queue_directory`;
  chomp($qdir);
  my $active=`find $qdir/incoming $qdir/active $qdir/maildrop -type f -print | wc -l | awk '{print \$1}'`;
  my $deferred=`find $qdir/deferred -type f -print | wc -l | awk '{print \$1}'`;
  print "active $active";
  print "deferred $deferred";
}
untie %stats;
