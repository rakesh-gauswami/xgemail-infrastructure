#!/usr/bin/env python

import sys
sys.path.append("<%= @xgemail_utils_path %>")
import argparse
import json
import os
import sys
import gziputils
import logging
import subprocess
from logging.handlers import SysLogHandler
from awshandler import AwsHandler

AWS_REGION = "<%= @aws_region %>"
ACCOUNT =  "<%= @account %>"
POSTFIX_INSTANCE_NAME = '<%= @postfix_instance_name %>'
awshandler = AwsHandler(AWS_REGION)
postfix_instance_name = POSTFIX_INSTANCE_NAME

# logging to syslog setup
logging.getLogger("botocore").setLevel(logging.WARNING)
logger = logging.getLogger('flat-file-flag')
logger.setLevel(logging.INFO)
handler = logging.handlers.SysLogHandler('/dev/log')
formatter = logging.Formatter(
    '[%(name)s] %(process)d %(levelname)s %(message)s'
)
handler.formatter = formatter
logger.addHandler(handler)

def enable_postfix_relay_domains():
    cmd= [
            'postmulti', '-i', postfix_instance_name, '-x',
            'postconf','relay_domains=hash:$config_directory/relay_domains'
        ]
    execute_postfix_cmd(cmd)
    #postmulti -i postfix-$1 -x postconf "relay_domains=hash:\$config_directory/relay_domains"

def disable_postfix_relay_domains():
    cmd= [
        'postmulti', '-i', postfix_instance_name, '-x',
        'postconf','relay_domains=static:ALL'
    ]
    return execute_postfix_cmd(cmd)
    #postmulti -i postfix-$1 -x postconf "relay_domains=static:ALL"

def execute_postfix_cmd(argv):
    pipe = subprocess.Popen(
             argv,
             stdout=subprocess.PIPE,
             stderr=subprocess.PIPE,
             close_fds=True)

    out, err = pipe.communicate()
    return pipe.returncode

def enable_postfix_smtpd_recipient_restrictions():
    if( postfix_instance_name == 'postfix-is'):
        cmd = [ 'postmulti', '-i' ,  postfix_instance_name, '-x', 'postconf', '-X', 'smtpd_recipient_restrictions' ]
        execute_postfix_cmd(cmd)
        cmd_add = [ 'postmulti', '-i' ,  postfix_instance_name, '-x', 'postconf', ('smtpd_recipient_restrictions='
         'reject_rhsbl_reverse_client uri.ire1.sophosxl.com=127.0.1.[1;3;4;5], '
         'reject_rhsbl_sender uri.ire1.sophosxl.com=127.0.1.[1;3;4;5], '
         'reject_rhsbl_client uri.ire1.sophosxl.com=127.0.1.[1;3;4;5], '
         'reject_rbl_client $reject_rbl_client, '
         'check_recipient_access hash:$config_directory/recipient_access hash:$config_directory/recipient_access_extra, '
         'check_sender_access hash:$config_directory/soft_retry_senders_map, reject')
         ]
        return execute_postfix_cmd(cmd_add)
    if( postfix_instance_name == 'postfix-mfis'):
        cmd = [ 'postmulti', '-i' ,  postfix_instance_name, '-x', 'postconf', '-X', 'smtpd_recipient_restrictions' ]
        execute_postfix_cmd(cmd)
        cmd_add = [ 'postmulti', '-i' ,  postfix_instance_name, '-x', 'postconf', ('smtpd_recipient_restrictions='
         'check_recipient_access hash:$config_directory/recipient_access hash:$config_directory/recipient_access_extra, '
         'check_sender_access hash:$config_directory/soft_retry_senders_map, reject')
         ]
        return execute_postfix_cmd(cmd_add)

def disable_postfix_smtpd_recipient_restrictions():
    if( postfix_instance_name == 'postfix-is'):
        cmd = [ 'postmulti', '-i' ,  postfix_instance_name, '-x', 'postconf', '-X', 'smtpd_recipient_restrictions' ]
        execute_postfix_cmd(cmd)
        cmd_add = [ 'postmulti', '-i' ,  postfix_instance_name, '-x', 'postconf', ('smtpd_recipient_restrictions='
         'reject_rhsbl_reverse_client uri.ire1.sophosxl.com=127.0.1.[1;3;4;5], '
         'reject_rhsbl_sender uri.ire1.sophosxl.com=127.0.1.[1;3;4;5], '
         'reject_rhsbl_client uri.ire1.sophosxl.com=127.0.1.[1;3;4;5], '
         'reject_rbl_client $reject_rbl_client')
         ]
        return execute_postfix_cmd(cmd_add)
    if( postfix_instance_name == 'postfix-mfis'):
        cmd = [ 'postmulti', '-i' ,  postfix_instance_name, '-x', 'postconf', '-X', 'smtpd_recipient_restrictions' ]
        return execute_postfix_cmd(cmd)

def reload_postfix():
    cmd= ['service', 'postfix', 'reload']
    return execute_postfix_cmd(cmd)

def enable_jilter_config():
    print "enable jilter config to ON..."
    print "Updating Postfix config to remove recipient access..."
    disable_postfix_smtpd_recipient_restrictions()

    print "Updating Postfix config to remove relay domains..."
    disable_postfix_relay_domains()

    print "Reloading Postfix..."
    postfix_reload_return_code = reload_postfix()
    if ( postfix_reload_return_code != 0 ):
        print "Postfix reload failed! Reverting changes..."
        enable_postfix_smtpd_recipient_restrictions()
        enable_postfix_relay_domains()

def disable_jilter_config():
    print "enable postfix config to ON..."
    print "Updating Postfix config to add recipient access..."
    enable_postfix_smtpd_recipient_restrictions()
    print "Updating Postfix config to add relay domains..."
    enable_postfix_relay_domains()

    print "Reloading Postfix..."
    postfix_reload_return_code = reload_postfix()
    if ( postfix_reload_return_code != 0 ):
        print "Postfix reload failed! Reverting changes..."
        disable_postfix_smtpd_recipient_restrictions()
        disable_postfix_relay_domains()

if __name__ == "__main__":

    flat_file_config_parser = argparse.ArgumentParser(description='Enable/Disable  postfix submit instances for flat file')
    flat_file_config_parser.add_argument('-e', '--enableinstance', action='store_true', help='Enable feature for this instance')
    flat_file_config_parser.add_argument('-d', '--disableinstance', action='store_true', help='Disable feature for this instace')

    get_config_from_args = flat_file_config_parser.parse_args()
    if get_config_from_args.enableinstance:
        enable_jilter_config()
    elif get_config_from_args.disableinstance:
        disable_jilter_config()
    else:
        flat_file_config_parser.print_help()