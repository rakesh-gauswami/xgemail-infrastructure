<filter sqs.msg.delivery.succeeded>
  @type parser
  key_name message
  reserve_data true
  reserve_time true
  <parse>
    @type regexp
    expression /^(?<host>[^ ]+) (?<process>[^ ]+): (?<queue_id>[^ ]+): to=<(?<recipient_address>[\S ]+)>, relay=(?<relay>[^ ]+),.*dsn=(?<dsn_code>[^ ]+), status=sent (?<sent>[\S ]+)/
  </parse>
</filter>

<filter sqs.msg.delivery.succeeded>
  @type record_transformer
  enable_ruby
  <record>
    message_path ${}
    queue_log ${{"schema_version" => "20180610", "server_type" => record["server_type"], "server_ip" => record["server_ip"], "queue_id" => record["queue_id"], "dsn_code" => record["dsn_code"], "timestamp" => record["timestamp"]}}
    next_queue_log ${}
  </record>
</filter>

<filter sqs.msg.delivery.succeeded>
  @type record_transformer
  renew_record true
  keep_keys direction, message_path, queue_log, next_queue_log, recipient_address
</filter>
